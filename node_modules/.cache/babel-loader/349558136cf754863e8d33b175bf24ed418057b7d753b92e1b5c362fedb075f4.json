{"ast":null,"code":"import { getValueAtCurrentBreakpoint } from '../primitives/shared/responsive/utils.mjs';\nimport { useBreakpoint } from '../primitives/shared/responsive/useBreakpoint.mjs';\nimport { useTheme } from './useTheme.mjs';\nimport { getStyleValue } from '../primitives/shared/getStyleValue.mjs';\nimport { isDesignToken, isString } from '@aws-amplify/ui';\n\n/**\n * [ðŸ“– Docs](https://ui.docs.amplify.aws/react/theming/responsive#usebreakpointvalue)\n */\nconst useBreakpointValue = function (values) {\n  let defaultBreakpoint = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'base';\n  let propKey = arguments.length > 2 ? arguments[2] : undefined;\n  const {\n    breakpoints: {\n      values: breakpoints\n    },\n    tokens\n  } = useTheme();\n  const breakpoint = useBreakpoint({\n    breakpoints,\n    defaultBreakpoint\n  });\n  const value = getValueAtCurrentBreakpoint({\n    breakpoint,\n    breakpoints,\n    values\n  });\n  if (isDesignToken(value) || isString(value)) {\n    return getStyleValue({\n      value,\n      propKey,\n      tokens\n    });\n  } else {\n    return value;\n  }\n};\nexport { useBreakpointValue };","map":{"version":3,"names":["getValueAtCurrentBreakpoint","useBreakpoint","useTheme","getStyleValue","isDesignToken","isString","useBreakpointValue","values","defaultBreakpoint","arguments","length","undefined","propKey","breakpoints","tokens","breakpoint","value"],"sources":["/Users/raphaperso/Documents/Hub/amplify_test/notes/node_modules/@aws-amplify/ui-react/dist/esm/hooks/useBreakpointValue.mjs"],"sourcesContent":["import { getValueAtCurrentBreakpoint } from '../primitives/shared/responsive/utils.mjs';\nimport { useBreakpoint } from '../primitives/shared/responsive/useBreakpoint.mjs';\nimport { useTheme } from './useTheme.mjs';\nimport { getStyleValue } from '../primitives/shared/getStyleValue.mjs';\nimport { isDesignToken, isString } from '@aws-amplify/ui';\n\n/**\n * [ðŸ“– Docs](https://ui.docs.amplify.aws/react/theming/responsive#usebreakpointvalue)\n */\nconst useBreakpointValue = (values, defaultBreakpoint = 'base', propKey) => {\n    const { breakpoints: { values: breakpoints }, tokens, } = useTheme();\n    const breakpoint = useBreakpoint({\n        breakpoints,\n        defaultBreakpoint,\n    });\n    const value = getValueAtCurrentBreakpoint({\n        breakpoint,\n        breakpoints,\n        values,\n    });\n    if (isDesignToken(value) || isString(value)) {\n        return getStyleValue({ value, propKey, tokens });\n    }\n    else {\n        return value;\n    }\n};\n\nexport { useBreakpointValue };\n"],"mappings":"AAAA,SAASA,2BAA2B,QAAQ,2CAA2C;AACvF,SAASC,aAAa,QAAQ,mDAAmD;AACjF,SAASC,QAAQ,QAAQ,gBAAgB;AACzC,SAASC,aAAa,QAAQ,wCAAwC;AACtE,SAASC,aAAa,EAAEC,QAAQ,QAAQ,iBAAiB;;AAEzD;AACA;AACA;AACA,MAAMC,kBAAkB,GAAG,SAAAA,CAACC,MAAM,EAA0C;EAAA,IAAxCC,iBAAiB,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,MAAM;EAAA,IAAEG,OAAO,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACnE,MAAM;IAAEE,WAAW,EAAE;MAAEN,MAAM,EAAEM;IAAY,CAAC;IAAEC;EAAQ,CAAC,GAAGZ,QAAQ,CAAC,CAAC;EACpE,MAAMa,UAAU,GAAGd,aAAa,CAAC;IAC7BY,WAAW;IACXL;EACJ,CAAC,CAAC;EACF,MAAMQ,KAAK,GAAGhB,2BAA2B,CAAC;IACtCe,UAAU;IACVF,WAAW;IACXN;EACJ,CAAC,CAAC;EACF,IAAIH,aAAa,CAACY,KAAK,CAAC,IAAIX,QAAQ,CAACW,KAAK,CAAC,EAAE;IACzC,OAAOb,aAAa,CAAC;MAAEa,KAAK;MAAEJ,OAAO;MAAEE;IAAO,CAAC,CAAC;EACpD,CAAC,MACI;IACD,OAAOE,KAAK;EAChB;AACJ,CAAC;AAED,SAASV,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}