{"ast":null,"code":"var _jsxFileName = \"/Users/raphaperso/Documents/Hub/amplify_test/notes/src/ui-components/NoteUpdateForm.jsx\",\n  _s = $RefreshSig$();\n/***************************************************************************\n * The contents of this file were generated with Amplify Studio.           *\n * Please refrain from making any modifications to this file.              *\n * Any changes to this file will be overwritten when running amplify pull. *\n **************************************************************************/\n\n/* eslint-disable */\nimport * as React from \"react\";\nimport { Button, Flex, Grid, TextField } from \"@aws-amplify/ui-react\";\nimport { Note } from \"../models\";\nimport { fetchByPath, getOverrideProps, validateField } from \"./utils\";\nimport { DataStore } from \"aws-amplify/datastore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NoteUpdateForm(props) {\n  _s();\n  var _errors$title2, _errors$title3, _errors$text2, _errors$text3;\n  const {\n    id: idProp,\n    note: noteModelProp,\n    onSuccess,\n    onError,\n    onSubmit,\n    onValidate,\n    onChange,\n    overrides,\n    ...rest\n  } = props;\n  const initialValues = {\n    title: \"\",\n    text: \"\"\n  };\n  const [title, setTitle] = React.useState(initialValues.title);\n  const [text, setText] = React.useState(initialValues.text);\n  const [errors, setErrors] = React.useState({});\n  const resetStateValues = () => {\n    const cleanValues = noteRecord ? {\n      ...initialValues,\n      ...noteRecord\n    } : initialValues;\n    setTitle(cleanValues.title);\n    setText(cleanValues.text);\n    setErrors({});\n  };\n  const [noteRecord, setNoteRecord] = React.useState(noteModelProp);\n  React.useEffect(() => {\n    const queryData = async () => {\n      const record = idProp ? await DataStore.query(Note, idProp) : noteModelProp;\n      setNoteRecord(record);\n    };\n    queryData();\n  }, [idProp, noteModelProp]);\n  React.useEffect(resetStateValues, [noteRecord]);\n  const validations = {\n    title: [],\n    text: []\n  };\n  const runValidationTasks = async (fieldName, currentValue, getDisplayValue) => {\n    const value = currentValue && getDisplayValue ? getDisplayValue(currentValue) : currentValue;\n    let validationResponse = validateField(value, validations[fieldName]);\n    const customValidator = fetchByPath(onValidate, fieldName);\n    if (customValidator) {\n      validationResponse = await customValidator(value, validationResponse);\n    }\n    setErrors(errors => ({\n      ...errors,\n      [fieldName]: validationResponse\n    }));\n    return validationResponse;\n  };\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    as: \"form\",\n    rowGap: \"15px\",\n    columnGap: \"15px\",\n    padding: \"20px\",\n    onSubmit: async event => {\n      event.preventDefault();\n      let modelFields = {\n        title,\n        text\n      };\n      const validationResponses = await Promise.all(Object.keys(validations).reduce((promises, fieldName) => {\n        if (Array.isArray(modelFields[fieldName])) {\n          promises.push(...modelFields[fieldName].map(item => runValidationTasks(fieldName, item)));\n          return promises;\n        }\n        promises.push(runValidationTasks(fieldName, modelFields[fieldName]));\n        return promises;\n      }, []));\n      if (validationResponses.some(r => r.hasError)) {\n        return;\n      }\n      if (onSubmit) {\n        modelFields = onSubmit(modelFields);\n      }\n      try {\n        Object.entries(modelFields).forEach(([key, value]) => {\n          if (typeof value === \"string\" && value === \"\") {\n            modelFields[key] = null;\n          }\n        });\n        await DataStore.save(Note.copyOf(noteRecord, updated => {\n          Object.assign(updated, modelFields);\n        }));\n        if (onSuccess) {\n          onSuccess(modelFields);\n        }\n      } catch (err) {\n        if (onError) {\n          onError(modelFields, err.message);\n        }\n      }\n    },\n    ...getOverrideProps(overrides, \"NoteUpdateForm\"),\n    ...rest,\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Title\",\n      isRequired: false,\n      isReadOnly: false,\n      value: title,\n      onChange: e => {\n        var _errors$title;\n        let {\n          value\n        } = e.target;\n        if (onChange) {\n          var _result$title;\n          const modelFields = {\n            title: value,\n            text\n          };\n          const result = onChange(modelFields);\n          value = (_result$title = result === null || result === void 0 ? void 0 : result.title) !== null && _result$title !== void 0 ? _result$title : value;\n        }\n        if ((_errors$title = errors.title) !== null && _errors$title !== void 0 && _errors$title.hasError) {\n          runValidationTasks(\"title\", value);\n        }\n        setTitle(value);\n      },\n      onBlur: () => runValidationTasks(\"title\", title),\n      errorMessage: (_errors$title2 = errors.title) === null || _errors$title2 === void 0 ? void 0 : _errors$title2.errorMessage,\n      hasError: (_errors$title3 = errors.title) === null || _errors$title3 === void 0 ? void 0 : _errors$title3.hasError,\n      ...getOverrideProps(overrides, \"title\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Text\",\n      isRequired: false,\n      isReadOnly: false,\n      value: text,\n      onChange: e => {\n        var _errors$text;\n        let {\n          value\n        } = e.target;\n        if (onChange) {\n          var _result$text;\n          const modelFields = {\n            title,\n            text: value\n          };\n          const result = onChange(modelFields);\n          value = (_result$text = result === null || result === void 0 ? void 0 : result.text) !== null && _result$text !== void 0 ? _result$text : value;\n        }\n        if ((_errors$text = errors.text) !== null && _errors$text !== void 0 && _errors$text.hasError) {\n          runValidationTasks(\"text\", value);\n        }\n        setText(value);\n      },\n      onBlur: () => runValidationTasks(\"text\", text),\n      errorMessage: (_errors$text2 = errors.text) === null || _errors$text2 === void 0 ? void 0 : _errors$text2.errorMessage,\n      hasError: (_errors$text3 = errors.text) === null || _errors$text3 === void 0 ? void 0 : _errors$text3.hasError,\n      ...getOverrideProps(overrides, \"text\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      justifyContent: \"space-between\",\n      ...getOverrideProps(overrides, \"CTAFlex\"),\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        children: \"Reset\",\n        type: \"reset\",\n        onClick: event => {\n          event.preventDefault();\n          resetStateValues();\n        },\n        isDisabled: !(idProp || noteModelProp),\n        ...getOverrideProps(overrides, \"ResetButton\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        gap: \"15px\",\n        ...getOverrideProps(overrides, \"RightAlignCTASubFlex\"),\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          children: \"Submit\",\n          type: \"submit\",\n          variation: \"primary\",\n          isDisabled: !(idProp || noteModelProp) || Object.values(errors).some(e => e === null || e === void 0 ? void 0 : e.hasError),\n          ...getOverrideProps(overrides, \"SubmitButton\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(NoteUpdateForm, \"UiRrTViZmevISWxsVN7z5xJipJA=\");\n_c = NoteUpdateForm;\nvar _c;\n$RefreshReg$(_c, \"NoteUpdateForm\");","map":{"version":3,"names":["React","Button","Flex","Grid","TextField","Note","fetchByPath","getOverrideProps","validateField","DataStore","jsxDEV","_jsxDEV","NoteUpdateForm","props","_s","_errors$title2","_errors$title3","_errors$text2","_errors$text3","id","idProp","note","noteModelProp","onSuccess","onError","onSubmit","onValidate","onChange","overrides","rest","initialValues","title","text","setTitle","useState","setText","errors","setErrors","resetStateValues","cleanValues","noteRecord","setNoteRecord","useEffect","queryData","record","query","validations","runValidationTasks","fieldName","currentValue","getDisplayValue","value","validationResponse","customValidator","as","rowGap","columnGap","padding","event","preventDefault","modelFields","validationResponses","Promise","all","Object","keys","reduce","promises","Array","isArray","push","map","item","some","r","hasError","entries","forEach","key","save","copyOf","updated","assign","err","message","children","label","isRequired","isReadOnly","e","_errors$title","target","_result$title","result","onBlur","errorMessage","fileName","_jsxFileName","lineNumber","columnNumber","_errors$text","_result$text","justifyContent","type","onClick","isDisabled","gap","variation","values","_c","$RefreshReg$"],"sources":["/Users/raphaperso/Documents/Hub/amplify_test/notes/src/ui-components/NoteUpdateForm.jsx"],"sourcesContent":["/***************************************************************************\n * The contents of this file were generated with Amplify Studio.           *\n * Please refrain from making any modifications to this file.              *\n * Any changes to this file will be overwritten when running amplify pull. *\n **************************************************************************/\n\n/* eslint-disable */\nimport * as React from \"react\";\nimport { Button, Flex, Grid, TextField } from \"@aws-amplify/ui-react\";\nimport { Note } from \"../models\";\nimport { fetchByPath, getOverrideProps, validateField } from \"./utils\";\nimport { DataStore } from \"aws-amplify/datastore\";\nexport default function NoteUpdateForm(props) {\n  const {\n    id: idProp,\n    note: noteModelProp,\n    onSuccess,\n    onError,\n    onSubmit,\n    onValidate,\n    onChange,\n    overrides,\n    ...rest\n  } = props;\n  const initialValues = {\n    title: \"\",\n    text: \"\",\n  };\n  const [title, setTitle] = React.useState(initialValues.title);\n  const [text, setText] = React.useState(initialValues.text);\n  const [errors, setErrors] = React.useState({});\n  const resetStateValues = () => {\n    const cleanValues = noteRecord\n      ? { ...initialValues, ...noteRecord }\n      : initialValues;\n    setTitle(cleanValues.title);\n    setText(cleanValues.text);\n    setErrors({});\n  };\n  const [noteRecord, setNoteRecord] = React.useState(noteModelProp);\n  React.useEffect(() => {\n    const queryData = async () => {\n      const record = idProp\n        ? await DataStore.query(Note, idProp)\n        : noteModelProp;\n      setNoteRecord(record);\n    };\n    queryData();\n  }, [idProp, noteModelProp]);\n  React.useEffect(resetStateValues, [noteRecord]);\n  const validations = {\n    title: [],\n    text: [],\n  };\n  const runValidationTasks = async (\n    fieldName,\n    currentValue,\n    getDisplayValue\n  ) => {\n    const value =\n      currentValue && getDisplayValue\n        ? getDisplayValue(currentValue)\n        : currentValue;\n    let validationResponse = validateField(value, validations[fieldName]);\n    const customValidator = fetchByPath(onValidate, fieldName);\n    if (customValidator) {\n      validationResponse = await customValidator(value, validationResponse);\n    }\n    setErrors((errors) => ({ ...errors, [fieldName]: validationResponse }));\n    return validationResponse;\n  };\n  return (\n    <Grid\n      as=\"form\"\n      rowGap=\"15px\"\n      columnGap=\"15px\"\n      padding=\"20px\"\n      onSubmit={async (event) => {\n        event.preventDefault();\n        let modelFields = {\n          title,\n          text,\n        };\n        const validationResponses = await Promise.all(\n          Object.keys(validations).reduce((promises, fieldName) => {\n            if (Array.isArray(modelFields[fieldName])) {\n              promises.push(\n                ...modelFields[fieldName].map((item) =>\n                  runValidationTasks(fieldName, item)\n                )\n              );\n              return promises;\n            }\n            promises.push(\n              runValidationTasks(fieldName, modelFields[fieldName])\n            );\n            return promises;\n          }, [])\n        );\n        if (validationResponses.some((r) => r.hasError)) {\n          return;\n        }\n        if (onSubmit) {\n          modelFields = onSubmit(modelFields);\n        }\n        try {\n          Object.entries(modelFields).forEach(([key, value]) => {\n            if (typeof value === \"string\" && value === \"\") {\n              modelFields[key] = null;\n            }\n          });\n          await DataStore.save(\n            Note.copyOf(noteRecord, (updated) => {\n              Object.assign(updated, modelFields);\n            })\n          );\n          if (onSuccess) {\n            onSuccess(modelFields);\n          }\n        } catch (err) {\n          if (onError) {\n            onError(modelFields, err.message);\n          }\n        }\n      }}\n      {...getOverrideProps(overrides, \"NoteUpdateForm\")}\n      {...rest}\n    >\n      <TextField\n        label=\"Title\"\n        isRequired={false}\n        isReadOnly={false}\n        value={title}\n        onChange={(e) => {\n          let { value } = e.target;\n          if (onChange) {\n            const modelFields = {\n              title: value,\n              text,\n            };\n            const result = onChange(modelFields);\n            value = result?.title ?? value;\n          }\n          if (errors.title?.hasError) {\n            runValidationTasks(\"title\", value);\n          }\n          setTitle(value);\n        }}\n        onBlur={() => runValidationTasks(\"title\", title)}\n        errorMessage={errors.title?.errorMessage}\n        hasError={errors.title?.hasError}\n        {...getOverrideProps(overrides, \"title\")}\n      ></TextField>\n      <TextField\n        label=\"Text\"\n        isRequired={false}\n        isReadOnly={false}\n        value={text}\n        onChange={(e) => {\n          let { value } = e.target;\n          if (onChange) {\n            const modelFields = {\n              title,\n              text: value,\n            };\n            const result = onChange(modelFields);\n            value = result?.text ?? value;\n          }\n          if (errors.text?.hasError) {\n            runValidationTasks(\"text\", value);\n          }\n          setText(value);\n        }}\n        onBlur={() => runValidationTasks(\"text\", text)}\n        errorMessage={errors.text?.errorMessage}\n        hasError={errors.text?.hasError}\n        {...getOverrideProps(overrides, \"text\")}\n      ></TextField>\n      <Flex\n        justifyContent=\"space-between\"\n        {...getOverrideProps(overrides, \"CTAFlex\")}\n      >\n        <Button\n          children=\"Reset\"\n          type=\"reset\"\n          onClick={(event) => {\n            event.preventDefault();\n            resetStateValues();\n          }}\n          isDisabled={!(idProp || noteModelProp)}\n          {...getOverrideProps(overrides, \"ResetButton\")}\n        ></Button>\n        <Flex\n          gap=\"15px\"\n          {...getOverrideProps(overrides, \"RightAlignCTASubFlex\")}\n        >\n          <Button\n            children=\"Submit\"\n            type=\"submit\"\n            variation=\"primary\"\n            isDisabled={\n              !(idProp || noteModelProp) ||\n              Object.values(errors).some((e) => e?.hasError)\n            }\n            {...getOverrideProps(overrides, \"SubmitButton\")}\n          ></Button>\n        </Flex>\n      </Flex>\n    </Grid>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}