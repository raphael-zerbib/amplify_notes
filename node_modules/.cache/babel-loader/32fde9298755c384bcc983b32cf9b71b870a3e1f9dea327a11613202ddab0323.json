{"ast":null,"code":"import * as React from 'react';\nimport { classNames, ComponentClassName, classNameModifierByFlag, classNameModifier } from '@aws-amplify/ui';\nimport { Flex } from '../Flex/Flex.mjs';\nimport '../Field/FieldClearButton.mjs';\nimport '../Field/FieldDescription.mjs';\nimport { FieldErrorMessage } from '../Field/FieldErrorMessage.mjs';\nimport '../Field/Field.mjs';\nimport { Input } from '../Input/Input.mjs';\nimport { Label } from '../Label/Label.mjs';\nimport { useStableId } from '../utils/useStableId.mjs';\nimport { useSwitch } from './useSwitch.mjs';\nimport { View } from '../View/View.mjs';\nimport { VisuallyHidden } from '../VisuallyHidden/VisuallyHidden.mjs';\nimport { useFieldset } from '../Fieldset/useFieldset.mjs';\nimport { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\nconst SwitchFieldPrimitive = (_ref, ref) => {\n  let {\n    className,\n    defaultChecked,\n    id,\n    isChecked,\n    isDisabled,\n    isLabelHidden,\n    label,\n    labelPosition,\n    name,\n    onChange,\n    size,\n    thumbColor,\n    trackCheckedColor,\n    trackColor,\n    value,\n    hasError,\n    errorMessage,\n    ...rest\n  } = _ref;\n  const {\n    isOn,\n    changeHandler,\n    isFocused,\n    setIsFocused\n  } = useSwitch({\n    onChange,\n    isChecked,\n    defaultChecked,\n    isDisabled\n  });\n  const {\n    isFieldsetDisabled\n  } = useFieldset();\n  const shouldBeDisabled = isFieldsetDisabled ? isFieldsetDisabled : isDisabled;\n  const fieldId = useStableId(id);\n  const wrapperClasses = classNames(ComponentClassName.SwitchTrack, classNameModifierByFlag(ComponentClassName.SwitchTrack, 'checked', isOn), classNameModifierByFlag(ComponentClassName.SwitchTrack, 'disabled', shouldBeDisabled), classNameModifierByFlag(ComponentClassName.SwitchTrack, 'focused', isFocused), classNameModifierByFlag(ComponentClassName.SwitchTrack, 'error', hasError));\n  const componentClasses = classNames(ComponentClassName.SwitchThumb, classNameModifierByFlag(ComponentClassName.SwitchThumb, 'checked', isOn), classNameModifierByFlag(ComponentClassName.SwitchThumb, 'disabled', shouldBeDisabled));\n  return React.createElement(Flex, {\n    className: classNames(ComponentClassName.SwitchField, classNameModifier(ComponentClassName.SwitchField, size), labelPosition ? \"amplify-label-\".concat(labelPosition) : null, className),\n    ref: ref,\n    ...rest\n  }, React.createElement(VisuallyHidden, null, React.createElement(Input, {\n    role: \"switch\",\n    type: \"checkbox\",\n    id: fieldId,\n    onChange: changeHandler,\n    disabled: isDisabled,\n    name: name,\n    checked: isOn,\n    value: value,\n    onFocus: () => {\n      setIsFocused(true);\n    },\n    onBlur: () => {\n      setIsFocused(false);\n    }\n  })), React.createElement(Label, {\n    htmlFor: fieldId,\n    className: classNames(ComponentClassName.SwitchWrapper, classNameModifier(ComponentClassName.SwitchWrapper, labelPosition))\n  }, isLabelHidden ? React.createElement(VisuallyHidden, {\n    as: \"span\",\n    className: ComponentClassName.SwitchLabel\n  }, label) : React.createElement(View, {\n    as: \"span\",\n    className: ComponentClassName.SwitchLabel\n  }, label), React.createElement(View, {\n    as: \"span\",\n    className: wrapperClasses,\n    backgroundColor: isOn ? trackCheckedColor : trackColor\n  }, React.createElement(View, {\n    as: \"span\",\n    className: componentClasses,\n    \"data-checked\": isOn,\n    \"data-disabled\": shouldBeDisabled,\n    backgroundColor: thumbColor\n  }))), React.createElement(FieldErrorMessage, {\n    hasError: hasError,\n    errorMessage: errorMessage\n  }));\n};\n/**\n * [ðŸ“– Docs](https://ui.docs.amplify.aws/react/components/switchfield)\n */\nconst SwitchField = primitiveWithForwardRef(SwitchFieldPrimitive);\nSwitchField.displayName = 'SwitchField';\nexport { SwitchField };","map":{"version":3,"names":["React","classNames","ComponentClassName","classNameModifierByFlag","classNameModifier","Flex","FieldErrorMessage","Input","Label","useStableId","useSwitch","View","VisuallyHidden","useFieldset","primitiveWithForwardRef","SwitchFieldPrimitive","_ref","ref","className","defaultChecked","id","isChecked","isDisabled","isLabelHidden","label","labelPosition","name","onChange","size","thumbColor","trackCheckedColor","trackColor","value","hasError","errorMessage","rest","isOn","changeHandler","isFocused","setIsFocused","isFieldsetDisabled","shouldBeDisabled","fieldId","wrapperClasses","SwitchTrack","componentClasses","SwitchThumb","createElement","SwitchField","concat","role","type","disabled","checked","onFocus","onBlur","htmlFor","SwitchWrapper","as","SwitchLabel","backgroundColor","displayName"],"sources":["/Users/raphaperso/Documents/Hub/amplify_test/notes/node_modules/@aws-amplify/ui-react/dist/esm/primitives/SwitchField/SwitchField.mjs"],"sourcesContent":["import * as React from 'react';\nimport { classNames, ComponentClassName, classNameModifierByFlag, classNameModifier } from '@aws-amplify/ui';\nimport { Flex } from '../Flex/Flex.mjs';\nimport '../Field/FieldClearButton.mjs';\nimport '../Field/FieldDescription.mjs';\nimport { FieldErrorMessage } from '../Field/FieldErrorMessage.mjs';\nimport '../Field/Field.mjs';\nimport { Input } from '../Input/Input.mjs';\nimport { Label } from '../Label/Label.mjs';\nimport { useStableId } from '../utils/useStableId.mjs';\nimport { useSwitch } from './useSwitch.mjs';\nimport { View } from '../View/View.mjs';\nimport { VisuallyHidden } from '../VisuallyHidden/VisuallyHidden.mjs';\nimport { useFieldset } from '../Fieldset/useFieldset.mjs';\nimport { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n\nconst SwitchFieldPrimitive = ({ className, defaultChecked, id, isChecked, isDisabled, isLabelHidden, label, labelPosition, name, onChange, size, thumbColor, trackCheckedColor, trackColor, value, hasError, errorMessage, ...rest }, ref) => {\n    const { isOn, changeHandler, isFocused, setIsFocused } = useSwitch({\n        onChange,\n        isChecked,\n        defaultChecked,\n        isDisabled,\n    });\n    const { isFieldsetDisabled } = useFieldset();\n    const shouldBeDisabled = isFieldsetDisabled ? isFieldsetDisabled : isDisabled;\n    const fieldId = useStableId(id);\n    const wrapperClasses = classNames(ComponentClassName.SwitchTrack, classNameModifierByFlag(ComponentClassName.SwitchTrack, 'checked', isOn), classNameModifierByFlag(ComponentClassName.SwitchTrack, 'disabled', shouldBeDisabled), classNameModifierByFlag(ComponentClassName.SwitchTrack, 'focused', isFocused), classNameModifierByFlag(ComponentClassName.SwitchTrack, 'error', hasError));\n    const componentClasses = classNames(ComponentClassName.SwitchThumb, classNameModifierByFlag(ComponentClassName.SwitchThumb, 'checked', isOn), classNameModifierByFlag(ComponentClassName.SwitchThumb, 'disabled', shouldBeDisabled));\n    return (React.createElement(Flex, { className: classNames(ComponentClassName.SwitchField, classNameModifier(ComponentClassName.SwitchField, size), labelPosition ? `amplify-label-${labelPosition}` : null, className), ref: ref, ...rest },\n        React.createElement(VisuallyHidden, null,\n            React.createElement(Input, { role: \"switch\", type: \"checkbox\", id: fieldId, onChange: changeHandler, disabled: isDisabled, name: name, checked: isOn, value: value, onFocus: () => {\n                    setIsFocused(true);\n                }, onBlur: () => {\n                    setIsFocused(false);\n                } })),\n        React.createElement(Label, { htmlFor: fieldId, className: classNames(ComponentClassName.SwitchWrapper, classNameModifier(ComponentClassName.SwitchWrapper, labelPosition)) },\n            isLabelHidden ? (React.createElement(VisuallyHidden, { as: \"span\", className: ComponentClassName.SwitchLabel }, label)) : (React.createElement(View, { as: \"span\", className: ComponentClassName.SwitchLabel }, label)),\n            React.createElement(View, { as: \"span\", className: wrapperClasses, backgroundColor: isOn ? trackCheckedColor : trackColor },\n                React.createElement(View, { as: \"span\", className: componentClasses, \"data-checked\": isOn, \"data-disabled\": shouldBeDisabled, backgroundColor: thumbColor }))),\n        React.createElement(FieldErrorMessage, { hasError: hasError, errorMessage: errorMessage })));\n};\n/**\n * [ðŸ“– Docs](https://ui.docs.amplify.aws/react/components/switchfield)\n */\nconst SwitchField = primitiveWithForwardRef(SwitchFieldPrimitive);\nSwitchField.displayName = 'SwitchField';\n\nexport { SwitchField };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}