{"ast":null,"code":"import * as React from 'react';\nimport { classNames, ComponentClassName, classNameModifier, classNameModifierByFlag } from '@aws-amplify/ui';\nimport { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\nimport { useFieldset } from '../Fieldset/useFieldset.mjs';\nimport { Flex } from '../Flex/Flex.mjs';\nimport { Loader } from '../Loader/Loader.mjs';\nimport { View } from '../View/View.mjs';\n\n// These variations support colorThemes. 'undefined' accounts for our\n// 'default' variation which is not named.\nconst supportedVariations = ['link', 'primary', undefined];\nconst ButtonPrimitive = (_ref, ref) => {\n  var _ref2;\n  let {\n    className,\n    children,\n    colorTheme,\n    isFullWidth = false,\n    isDisabled,\n    isLoading,\n    loadingText = '',\n    size,\n    type = 'button',\n    variation,\n    ...rest\n  } = _ref;\n  // Creates our colorTheme modifier string based on if the variation\n  // supports colorThemes and a colorTheme is used.\n  const colorThemeModifier = supportedVariations.includes(variation) && colorTheme ? \"\".concat(variation !== null && variation !== void 0 ? variation : 'outlined', \"--\").concat(colorTheme) : undefined;\n  const {\n    isFieldsetDisabled\n  } = useFieldset();\n  const shouldBeDisabled = isFieldsetDisabled ? isFieldsetDisabled : (_ref2 = isDisabled !== null && isDisabled !== void 0 ? isDisabled : isLoading) !== null && _ref2 !== void 0 ? _ref2 : rest['disabled'];\n  const componentClasses = classNames(ComponentClassName.Button, ComponentClassName.FieldGroupControl, classNameModifier(ComponentClassName.Button, variation), classNameModifier(ComponentClassName.Button, colorThemeModifier), classNameModifier(ComponentClassName.Button, size), classNameModifierByFlag(ComponentClassName.Button, 'disabled', shouldBeDisabled), classNameModifierByFlag(ComponentClassName.Button, 'loading', isLoading), classNameModifierByFlag(ComponentClassName.Button, 'fullwidth', isFullWidth), className);\n  return React.createElement(View, {\n    ref: ref,\n    as: \"button\",\n    className: componentClasses,\n    isDisabled: shouldBeDisabled,\n    type: type,\n    ...rest\n  }, isLoading ? React.createElement(Flex, {\n    as: \"span\",\n    className: ComponentClassName.ButtonLoaderWrapper\n  }, React.createElement(Loader, {\n    size: size\n  }), loadingText ? loadingText : null) : children);\n};\n/**\n * [ðŸ“– Docs](https://ui.docs.amplify.aws/react/components/button)\n */\nconst Button = primitiveWithForwardRef(ButtonPrimitive);\nButton.displayName = 'Button';\nexport { Button };","map":{"version":3,"names":["React","classNames","ComponentClassName","classNameModifier","classNameModifierByFlag","primitiveWithForwardRef","useFieldset","Flex","Loader","View","supportedVariations","undefined","ButtonPrimitive","_ref","ref","_ref2","className","children","colorTheme","isFullWidth","isDisabled","isLoading","loadingText","size","type","variation","rest","colorThemeModifier","includes","concat","isFieldsetDisabled","shouldBeDisabled","componentClasses","Button","FieldGroupControl","createElement","as","ButtonLoaderWrapper","displayName"],"sources":["/Users/raphaperso/Documents/Hub/amplify_test/notes/node_modules/@aws-amplify/ui-react/dist/esm/primitives/Button/Button.mjs"],"sourcesContent":["import * as React from 'react';\nimport { classNames, ComponentClassName, classNameModifier, classNameModifierByFlag } from '@aws-amplify/ui';\nimport { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\nimport { useFieldset } from '../Fieldset/useFieldset.mjs';\nimport { Flex } from '../Flex/Flex.mjs';\nimport { Loader } from '../Loader/Loader.mjs';\nimport { View } from '../View/View.mjs';\n\n// These variations support colorThemes. 'undefined' accounts for our\n// 'default' variation which is not named.\nconst supportedVariations = ['link', 'primary', undefined];\nconst ButtonPrimitive = ({ className, children, colorTheme, isFullWidth = false, isDisabled, isLoading, loadingText = '', size, type = 'button', variation, ...rest }, ref) => {\n    // Creates our colorTheme modifier string based on if the variation\n    // supports colorThemes and a colorTheme is used.\n    const colorThemeModifier = supportedVariations.includes(variation) && colorTheme\n        ? `${variation ?? 'outlined'}--${colorTheme}`\n        : undefined;\n    const { isFieldsetDisabled } = useFieldset();\n    const shouldBeDisabled = isFieldsetDisabled\n        ? isFieldsetDisabled\n        : isDisabled ?? isLoading ?? rest['disabled'];\n    const componentClasses = classNames(ComponentClassName.Button, ComponentClassName.FieldGroupControl, classNameModifier(ComponentClassName.Button, variation), classNameModifier(ComponentClassName.Button, colorThemeModifier), classNameModifier(ComponentClassName.Button, size), classNameModifierByFlag(ComponentClassName.Button, 'disabled', shouldBeDisabled), classNameModifierByFlag(ComponentClassName.Button, 'loading', isLoading), classNameModifierByFlag(ComponentClassName.Button, 'fullwidth', isFullWidth), className);\n    return (React.createElement(View, { ref: ref, as: \"button\", className: componentClasses, isDisabled: shouldBeDisabled, type: type, ...rest }, isLoading ? (React.createElement(Flex, { as: \"span\", className: ComponentClassName.ButtonLoaderWrapper },\n        React.createElement(Loader, { size: size }),\n        loadingText ? loadingText : null)) : (children)));\n};\n/**\n * [ðŸ“– Docs](https://ui.docs.amplify.aws/react/components/button)\n */\nconst Button = primitiveWithForwardRef(ButtonPrimitive);\nButton.displayName = 'Button';\n\nexport { Button };\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,UAAU,EAAEC,kBAAkB,EAAEC,iBAAiB,EAAEC,uBAAuB,QAAQ,iBAAiB;AAC5G,SAASC,uBAAuB,QAAQ,sCAAsC;AAC9E,SAASC,WAAW,QAAQ,6BAA6B;AACzD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,MAAM,QAAQ,sBAAsB;AAC7C,SAASC,IAAI,QAAQ,kBAAkB;;AAEvC;AACA;AACA,MAAMC,mBAAmB,GAAG,CAAC,MAAM,EAAE,SAAS,EAAEC,SAAS,CAAC;AAC1D,MAAMC,eAAe,GAAGA,CAAAC,IAAA,EAA+IC,GAAG,KAAK;EAAA,IAAAC,KAAA;EAAA,IAAtJ;IAAEC,SAAS;IAAEC,QAAQ;IAAEC,UAAU;IAAEC,WAAW,GAAG,KAAK;IAAEC,UAAU;IAAEC,SAAS;IAAEC,WAAW,GAAG,EAAE;IAAEC,IAAI;IAAEC,IAAI,GAAG,QAAQ;IAAEC,SAAS;IAAE,GAAGC;EAAK,CAAC,GAAAb,IAAA;EACjK;EACA;EACA,MAAMc,kBAAkB,GAAGjB,mBAAmB,CAACkB,QAAQ,CAACH,SAAS,CAAC,IAAIP,UAAU,MAAAW,MAAA,CACvEJ,SAAS,aAATA,SAAS,cAATA,SAAS,GAAI,UAAU,QAAAI,MAAA,CAAKX,UAAU,IACzCP,SAAS;EACf,MAAM;IAAEmB;EAAmB,CAAC,GAAGxB,WAAW,CAAC,CAAC;EAC5C,MAAMyB,gBAAgB,GAAGD,kBAAkB,GACrCA,kBAAkB,IAAAf,KAAA,GAClBK,UAAU,aAAVA,UAAU,cAAVA,UAAU,GAAIC,SAAS,cAAAN,KAAA,cAAAA,KAAA,GAAIW,IAAI,CAAC,UAAU,CAAC;EACjD,MAAMM,gBAAgB,GAAG/B,UAAU,CAACC,kBAAkB,CAAC+B,MAAM,EAAE/B,kBAAkB,CAACgC,iBAAiB,EAAE/B,iBAAiB,CAACD,kBAAkB,CAAC+B,MAAM,EAAER,SAAS,CAAC,EAAEtB,iBAAiB,CAACD,kBAAkB,CAAC+B,MAAM,EAAEN,kBAAkB,CAAC,EAAExB,iBAAiB,CAACD,kBAAkB,CAAC+B,MAAM,EAAEV,IAAI,CAAC,EAAEnB,uBAAuB,CAACF,kBAAkB,CAAC+B,MAAM,EAAE,UAAU,EAAEF,gBAAgB,CAAC,EAAE3B,uBAAuB,CAACF,kBAAkB,CAAC+B,MAAM,EAAE,SAAS,EAAEZ,SAAS,CAAC,EAAEjB,uBAAuB,CAACF,kBAAkB,CAAC+B,MAAM,EAAE,WAAW,EAAEd,WAAW,CAAC,EAAEH,SAAS,CAAC;EACxgB,OAAQhB,KAAK,CAACmC,aAAa,CAAC1B,IAAI,EAAE;IAAEK,GAAG,EAAEA,GAAG;IAAEsB,EAAE,EAAE,QAAQ;IAAEpB,SAAS,EAAEgB,gBAAgB;IAAEZ,UAAU,EAAEW,gBAAgB;IAAEP,IAAI,EAAEA,IAAI;IAAE,GAAGE;EAAK,CAAC,EAAEL,SAAS,GAAIrB,KAAK,CAACmC,aAAa,CAAC5B,IAAI,EAAE;IAAE6B,EAAE,EAAE,MAAM;IAAEpB,SAAS,EAAEd,kBAAkB,CAACmC;EAAoB,CAAC,EAClPrC,KAAK,CAACmC,aAAa,CAAC3B,MAAM,EAAE;IAAEe,IAAI,EAAEA;EAAK,CAAC,CAAC,EAC3CD,WAAW,GAAGA,WAAW,GAAG,IAAI,CAAC,GAAKL,QAAS,CAAC;AACxD,CAAC;AACD;AACA;AACA;AACA,MAAMgB,MAAM,GAAG5B,uBAAuB,CAACO,eAAe,CAAC;AACvDqB,MAAM,CAACK,WAAW,GAAG,QAAQ;AAE7B,SAASL,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}