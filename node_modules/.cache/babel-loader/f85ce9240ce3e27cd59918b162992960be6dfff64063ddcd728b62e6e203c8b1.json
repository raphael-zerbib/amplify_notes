{"ast":null,"code":"import React__default from 'react';\nimport { isUndefined, isString } from '@aws-amplify/ui';\nconst INVALID_OPTIONS_MESSAGE = 'an `errorMessage` or a `defaultValue` must be provided in `options`';\n/**\n * Uses `ContextType`/`Name` generics and `options` to create:\n * - `${Name}Context`: React Context of type `ContextType`\n * - `Provider${Name}`: React Context `Provider` component exposing the `ContextType`\n *   as optional props\n * - `use${Name}`: Utility Hook exposing the values of `ContextType`. Allows\n *   params with `errorMessage` for granular error messaging\n *\n * @template ContextType Type definition of the Context.\n * > For most use cases the keys of `ContextType` should not be optional in\n * preference of explicit `undefined` to avoid optional types on the\n * Utility Hook return\n *\n * @param options Context utility options. Requires a `contextName`, and\n * either a `defaultValue` of `ContextType` **or** an `errorMessage`\n * allowing for differing behaviors of the Utility Hook when used outside a\n * parent `Provider`:\n *\n * - `defaultValue`: Ensures the Utility Hook returns a default value for\n *   scenarios **where the missing context values should not impact usage**\n * - `errorMessage`: Ensures the Utility Hook throws an error for\n *   scenarios **where the missing context values should prevent** usage\n *\n * @returns `Context`, `Provider` Component and `useContext` Utility Hook\n *\n * @usage\n * ```ts\n * interface StuffContextType {\n *   things: number;\n * }\n *\n * // with `defaultValue`\n * const defaultValue: StuffContextType = { things: 7 };\n *\n * const { StuffProvider, useStuff } = createContextUtilities({\n *   contextName: 'Stuff',\n *   defaultValue,\n * });\n *\n * // with `errorMessage`\n * const { StuffProvider, useStuff } = createContextUtilities<StuffContextType>({\n *   contextName: 'Stuff',\n *   errorMessage: '`useStuff` must be used in a `StuffProvider`'\n * });\n * ```\n */\nfunction createContextUtilities(options) {\n  const {\n    contextName,\n    defaultValue,\n    errorMessage\n  } = options !== null && options !== void 0 ? options : {};\n  if (isUndefined(defaultValue) && !isString(errorMessage)) {\n    throw new Error(INVALID_OPTIONS_MESSAGE);\n  }\n  const Context = React__default.createContext(defaultValue);\n  function Provider(props) {\n    const {\n      children,\n      ...context\n    } = props;\n    const value = React__default.useMemo(() => context,\n    // Unpack `context` for the dep array; using `[context]` results in\n    // evaluation on every render\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    Object.values(context));\n    return React__default.createElement(Context.Provider, {\n      value: value\n    }, children);\n  }\n  Provider.displayName = \"\".concat(contextName, \"Provider\");\n  return {\n    [\"use\".concat(contextName)]: function (params) {\n      const context = React__default.useContext(Context);\n      if (isUndefined(context)) {\n        var _params$errorMessage;\n        throw new Error((_params$errorMessage = params === null || params === void 0 ? void 0 : params.errorMessage) !== null && _params$errorMessage !== void 0 ? _params$errorMessage : errorMessage);\n      }\n      return context;\n    },\n    [\"\".concat(contextName, \"Provider\")]: Provider,\n    [\"\".concat(contextName, \"Context\")]: Context\n  };\n}\nexport { INVALID_OPTIONS_MESSAGE, createContextUtilities as default };","map":{"version":3,"names":["React__default","isUndefined","isString","INVALID_OPTIONS_MESSAGE","createContextUtilities","options","contextName","defaultValue","errorMessage","Error","Context","createContext","Provider","props","children","context","value","useMemo","Object","values","createElement","displayName","concat","params","useContext","_params$errorMessage","default"],"sources":["/Users/raphaperso/Documents/Hub/amplify_test/notes/node_modules/@aws-amplify/ui-react-core/dist/esm/utils/createContextUtilities.mjs"],"sourcesContent":["import React__default from 'react';\nimport { isUndefined, isString } from '@aws-amplify/ui';\n\nconst INVALID_OPTIONS_MESSAGE = 'an `errorMessage` or a `defaultValue` must be provided in `options`';\n/**\n * Uses `ContextType`/`Name` generics and `options` to create:\n * - `${Name}Context`: React Context of type `ContextType`\n * - `Provider${Name}`: React Context `Provider` component exposing the `ContextType`\n *   as optional props\n * - `use${Name}`: Utility Hook exposing the values of `ContextType`. Allows\n *   params with `errorMessage` for granular error messaging\n *\n * @template ContextType Type definition of the Context.\n * > For most use cases the keys of `ContextType` should not be optional in\n * preference of explicit `undefined` to avoid optional types on the\n * Utility Hook return\n *\n * @param options Context utility options. Requires a `contextName`, and\n * either a `defaultValue` of `ContextType` **or** an `errorMessage`\n * allowing for differing behaviors of the Utility Hook when used outside a\n * parent `Provider`:\n *\n * - `defaultValue`: Ensures the Utility Hook returns a default value for\n *   scenarios **where the missing context values should not impact usage**\n * - `errorMessage`: Ensures the Utility Hook throws an error for\n *   scenarios **where the missing context values should prevent** usage\n *\n * @returns `Context`, `Provider` Component and `useContext` Utility Hook\n *\n * @usage\n * ```ts\n * interface StuffContextType {\n *   things: number;\n * }\n *\n * // with `defaultValue`\n * const defaultValue: StuffContextType = { things: 7 };\n *\n * const { StuffProvider, useStuff } = createContextUtilities({\n *   contextName: 'Stuff',\n *   defaultValue,\n * });\n *\n * // with `errorMessage`\n * const { StuffProvider, useStuff } = createContextUtilities<StuffContextType>({\n *   contextName: 'Stuff',\n *   errorMessage: '`useStuff` must be used in a `StuffProvider`'\n * });\n * ```\n */\nfunction createContextUtilities(options) {\n    const { contextName, defaultValue, errorMessage } = options ?? {};\n    if (isUndefined(defaultValue) && !isString(errorMessage)) {\n        throw new Error(INVALID_OPTIONS_MESSAGE);\n    }\n    const Context = React__default.createContext(defaultValue);\n    function Provider(props) {\n        const { children, ...context } = props;\n        const value = React__default.useMemo(() => context, \n        // Unpack `context` for the dep array; using `[context]` results in\n        // evaluation on every render\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        Object.values(context));\n        return React__default.createElement(Context.Provider, { value: value }, children);\n    }\n    Provider.displayName = `${contextName}Provider`;\n    return {\n        [`use${contextName}`]: function (params) {\n            const context = React__default.useContext(Context);\n            if (isUndefined(context)) {\n                throw new Error(params?.errorMessage ?? errorMessage);\n            }\n            return context;\n        },\n        [`${contextName}Provider`]: Provider,\n        [`${contextName}Context`]: Context,\n    };\n}\n\nexport { INVALID_OPTIONS_MESSAGE, createContextUtilities as default };\n"],"mappings":"AAAA,OAAOA,cAAc,MAAM,OAAO;AAClC,SAASC,WAAW,EAAEC,QAAQ,QAAQ,iBAAiB;AAEvD,MAAMC,uBAAuB,GAAG,qEAAqE;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,sBAAsBA,CAACC,OAAO,EAAE;EACrC,MAAM;IAAEC,WAAW;IAAEC,YAAY;IAAEC;EAAa,CAAC,GAAGH,OAAO,aAAPA,OAAO,cAAPA,OAAO,GAAI,CAAC,CAAC;EACjE,IAAIJ,WAAW,CAACM,YAAY,CAAC,IAAI,CAACL,QAAQ,CAACM,YAAY,CAAC,EAAE;IACtD,MAAM,IAAIC,KAAK,CAACN,uBAAuB,CAAC;EAC5C;EACA,MAAMO,OAAO,GAAGV,cAAc,CAACW,aAAa,CAACJ,YAAY,CAAC;EAC1D,SAASK,QAAQA,CAACC,KAAK,EAAE;IACrB,MAAM;MAAEC,QAAQ;MAAE,GAAGC;IAAQ,CAAC,GAAGF,KAAK;IACtC,MAAMG,KAAK,GAAGhB,cAAc,CAACiB,OAAO,CAAC,MAAMF,OAAO;IAClD;IACA;IACA;IACAG,MAAM,CAACC,MAAM,CAACJ,OAAO,CAAC,CAAC;IACvB,OAAOf,cAAc,CAACoB,aAAa,CAACV,OAAO,CAACE,QAAQ,EAAE;MAAEI,KAAK,EAAEA;IAAM,CAAC,EAAEF,QAAQ,CAAC;EACrF;EACAF,QAAQ,CAACS,WAAW,MAAAC,MAAA,CAAMhB,WAAW,aAAU;EAC/C,OAAO;IACH,OAAAgB,MAAA,CAAOhB,WAAW,IAAK,UAAUiB,MAAM,EAAE;MACrC,MAAMR,OAAO,GAAGf,cAAc,CAACwB,UAAU,CAACd,OAAO,CAAC;MAClD,IAAIT,WAAW,CAACc,OAAO,CAAC,EAAE;QAAA,IAAAU,oBAAA;QACtB,MAAM,IAAIhB,KAAK,EAAAgB,oBAAA,GAACF,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEf,YAAY,cAAAiB,oBAAA,cAAAA,oBAAA,GAAIjB,YAAY,CAAC;MACzD;MACA,OAAOO,OAAO;IAClB,CAAC;IACD,IAAAO,MAAA,CAAIhB,WAAW,gBAAaM,QAAQ;IACpC,IAAAU,MAAA,CAAIhB,WAAW,eAAYI;EAC/B,CAAC;AACL;AAEA,SAASP,uBAAuB,EAAEC,sBAAsB,IAAIsB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}