{"ast":null,"code":"import { generateGraphQLDocument, buildGraphQLVariables, authModeParams, getCustomHeaders, flattenItems, initializeModel } from '../APIClient.mjs';\nfunction getFactory(client, modelIntrospection, model, operation) {\n  let useContext = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  const getWithContext = async (contextSpec, arg, options) => {\n    return _get(client, modelIntrospection, model, arg, options, operation, contextSpec);\n  };\n  const get = async (arg, options) => {\n    return _get(client, modelIntrospection, model, arg, options, operation);\n  };\n  return useContext ? getWithContext : get;\n}\nasync function _get(client, modelIntrospection, model, arg, options, operation, context) {\n  const {\n    name\n  } = model;\n  const query = generateGraphQLDocument(modelIntrospection, name, operation, options);\n  const variables = buildGraphQLVariables(model, operation, arg, modelIntrospection);\n  try {\n    const auth = authModeParams(client, options);\n    const headers = getCustomHeaders(client, options === null || options === void 0 ? void 0 : options.headers);\n    const {\n      data,\n      extensions\n    } = context ? await client.graphql(context, {\n      ...auth,\n      query,\n      variables\n    }, headers) : await client.graphql({\n      ...auth,\n      query,\n      variables\n    }, headers);\n    // flatten response\n    if (data) {\n      const [key] = Object.keys(data);\n      const flattenedResult = flattenItems(data)[key];\n      if (options !== null && options !== void 0 && options.selectionSet) {\n        return {\n          data: flattenedResult,\n          extensions\n        };\n      } else {\n        // TODO: refactor to avoid destructuring here\n        const [initialized] = initializeModel(client, name, [flattenedResult], modelIntrospection, auth.authMode, auth.authToken, !!context);\n        return {\n          data: initialized,\n          extensions\n        };\n      }\n    } else {\n      return {\n        data: null,\n        extensions\n      };\n    }\n  } catch (error) {\n    if (error.errors) {\n      // graphql errors pass through\n      return error;\n    } else {\n      // non-graphql errors re re-thrown\n      throw error;\n    }\n  }\n}\nexport { getFactory };","map":{"version":3,"names":["getFactory","client","modelIntrospection","model","operation","useContext","arguments","length","undefined","getWithContext","contextSpec","arg","options","_get","get","context","name","query","generateGraphQLDocument","variables","buildGraphQLVariables","auth","authModeParams","headers","getCustomHeaders","data","extensions","graphql","key","Object","keys","flattenedResult","flattenItems","selectionSet","initialized","initializeModel","authMode","authToken","error","errors"],"sources":["/Users/raphaperso/Documents/Hub/amplify_test/notes/node_modules/@aws-amplify/api-graphql/src/internals/operations/get.ts"],"sourcesContent":["import { initializeModel, generateGraphQLDocument, buildGraphQLVariables, flattenItems, authModeParams, getCustomHeaders, } from '../APIClient';\nexport function getFactory(client, modelIntrospection, model, operation, useContext = false) {\n    const getWithContext = async (contextSpec, arg, options) => {\n        return _get(client, modelIntrospection, model, arg, options, operation, contextSpec);\n    };\n    const get = async (arg, options) => {\n        return _get(client, modelIntrospection, model, arg, options, operation);\n    };\n    return useContext ? getWithContext : get;\n}\nasync function _get(client, modelIntrospection, model, arg, options, operation, context) {\n    const { name } = model;\n    const query = generateGraphQLDocument(modelIntrospection, name, operation, options);\n    const variables = buildGraphQLVariables(model, operation, arg, modelIntrospection);\n    try {\n        const auth = authModeParams(client, options);\n        const headers = getCustomHeaders(client, options?.headers);\n        const { data, extensions } = context\n            ? (await client.graphql(context, {\n                ...auth,\n                query,\n                variables,\n            }, headers))\n            : (await client.graphql({\n                ...auth,\n                query,\n                variables,\n            }, headers));\n        // flatten response\n        if (data) {\n            const [key] = Object.keys(data);\n            const flattenedResult = flattenItems(data)[key];\n            if (options?.selectionSet) {\n                return { data: flattenedResult, extensions };\n            }\n            else {\n                // TODO: refactor to avoid destructuring here\n                const [initialized] = initializeModel(client, name, [flattenedResult], modelIntrospection, auth.authMode, auth.authToken, !!context);\n                return { data: initialized, extensions };\n            }\n        }\n        else {\n            return { data: null, extensions };\n        }\n    }\n    catch (error) {\n        if (error.errors) {\n            // graphql errors pass through\n            return error;\n        }\n        else {\n            // non-graphql errors re re-thrown\n            throw error;\n        }\n    }\n}\n"],"mappings":";AACO,SAASA,UAAUA,CAACC,MAAM,EAAEC,kBAAkB,EAAEC,KAAK,EAAEC,SAAS,EAAsB;EAAA,IAApBC,UAAU,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,KAAK;EACvF,MAAMG,cAAc,GAAG,MAAAA,CAAOC,WAAW,EAAEC,GAAG,EAAEC,OAAO,KAAK;IACxD,OAAOC,IAAI,CAACZ,MAAM,EAAEC,kBAAkB,EAAEC,KAAK,EAAEQ,GAAG,EAAEC,OAAO,EAAER,SAAS,EAAEM,WAAW,CAAC;EAC5F,CAAK;EACD,MAAMI,GAAG,GAAG,MAAAA,CAAOH,GAAG,EAAEC,OAAO,KAAK;IAChC,OAAOC,IAAI,CAACZ,MAAM,EAAEC,kBAAkB,EAAEC,KAAK,EAAEQ,GAAG,EAAEC,OAAO,EAAER,SAAS,CAAC;EAC/E,CAAK;EACD,OAAOC,UAAU,GAAGI,cAAc,GAAGK,GAAG;AAC5C;AACA,eAAeD,IAAIA,CAACZ,MAAM,EAAEC,kBAAkB,EAAEC,KAAK,EAAEQ,GAAG,EAAEC,OAAO,EAAER,SAAS,EAAEW,OAAO,EAAE;EACrF,MAAM;IAAEC;EAAI,CAAE,GAAGb,KAAK;EACtB,MAAMc,KAAK,GAAGC,uBAAuB,CAAChB,kBAAkB,EAAEc,IAAI,EAAEZ,SAAS,EAAEQ,OAAO,CAAC;EACnF,MAAMO,SAAS,GAAGC,qBAAqB,CAACjB,KAAK,EAAEC,SAAS,EAAEO,GAAG,EAAET,kBAAkB,CAAC;EAClF,IAAI;IACA,MAAMmB,IAAI,GAAGC,cAAc,CAACrB,MAAM,EAAEW,OAAO,CAAC;IAC5C,MAAMW,OAAO,GAAGC,gBAAgB,CAACvB,MAAM,EAAEW,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEW,OAAO,CAAC;IAC1D,MAAM;MAAEE,IAAI;MAAEC;IAAU,CAAE,GAAGX,OAAO,GAC7B,MAAMd,MAAM,CAAC0B,OAAO,CAACZ,OAAO,EAAE;MAC7B,GAAGM,IAAI;MACPJ,KAAK;MACLE;IAChB,CAAa,EAAEI,OAAO,CAAC,GACR,MAAMtB,MAAM,CAAC0B,OAAO,CAAC;MACpB,GAAGN,IAAI;MACPJ,KAAK;MACLE;IAChB,CAAa,EAAEI,OAAO,CAAE;IACxB;IACQ,IAAIE,IAAI,EAAE;MACN,MAAM,CAACG,GAAG,CAAC,GAAGC,MAAM,CAACC,IAAI,CAACL,IAAI,CAAC;MAC/B,MAAMM,eAAe,GAAGC,YAAY,CAACP,IAAI,CAAC,CAACG,GAAG,CAAC;MAC/C,IAAIhB,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAEqB,YAAY,EAAE;QACvB,OAAO;UAAER,IAAI,EAAEM,eAAe;UAAEL;QAAU,CAAE;MAC5D,CAAa,MACI;QACjB;QACgB,MAAM,CAACQ,WAAW,CAAC,GAAGC,eAAe,CAAClC,MAAM,EAAEe,IAAI,EAAE,CAACe,eAAe,CAAC,EAAE7B,kBAAkB,EAAEmB,IAAI,CAACe,QAAQ,EAAEf,IAAI,CAACgB,SAAS,EAAE,CAAC,CAACtB,OAAO,CAAC;QACpI,OAAO;UAAEU,IAAI,EAAES,WAAW;UAAER;QAAU,CAAE;MACxD;IACA,CAAS,MACI;MACD,OAAO;QAAED,IAAI,EAAE,IAAI;QAAEC;MAAU,CAAE;IAC7C;EACA,CAAK,CACD,OAAOY,KAAK,EAAE;IACV,IAAIA,KAAK,CAACC,MAAM,EAAE;MAC1B;MACY,OAAOD,KAAK;IACxB,CAAS,MACI;MACb;MACY,MAAMA,KAAK;IACvB;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}