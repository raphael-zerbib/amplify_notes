{"ast":null,"code":"import kebabCase from 'lodash/kebabCase.js';\nimport usesReference from 'style-dictionary/lib/utils/references/usesReference.js';\nimport '@aws-amplify/core/internals/utils';\nimport '../utils/setUserAgent/constants.mjs';\nimport { isObject, has, isString } from '../utils/utils.mjs';\nconst CSS_VARIABLE_PREFIX = 'amplify';\n// Important: these properties should not be altered in\n// order to maintain the expected order of the CSS `box-shadow` property\nconst SHADOW_PROPERTIES = ['offsetX', 'offsetY', 'blurRadius', 'spreadRadius', 'color'];\nfunction referenceValue(value) {\n  if (!value) return '';\n  if (usesReference(value)) {\n    const path = value.replace(/\\{|\\}/g, '').replace('.value', '').split('.');\n    return \"var(--\".concat(cssNameTransform({\n      path\n    }), \")\");\n  }\n  return value;\n}\nfunction cssValue(token) {\n  const {\n    value\n  } = token;\n  if (isString(value)) {\n    return referenceValue(value);\n  }\n  if (isShadowTokenObject(value)) {\n    return SHADOW_PROPERTIES.map(property => {\n      return referenceValue(\n      // lookup property against `token` first for custom non-nested value, then lookup\n      // property against `value` for design token value\n      isShadowTokenObject(token) ? token[property] : value[property]);\n    }).join(' ');\n  }\n  return value;\n}\nfunction cssNameTransform(_ref) {\n  let {\n    path = []\n  } = _ref;\n  return \"\".concat(kebabCase([CSS_VARIABLE_PREFIX, ...path].join(' ')));\n}\n/**\n * Helper function to test if something is a design token or not.\n * Used in the React component style props.\n *\n * @param value - thing to test if it is a design token or not\n * @returns boolean\n */\nfunction isDesignToken(value) {\n  return isObject(value) && has(value, 'value');\n}\nfunction isShadowTokenObject(value) {\n  return isObject(value) && has(value, 'offsetX');\n}\n/**\n * Recursive function that will walk down the token object\n * and perform the setupToken function on each token.\n * Similar to what Style Dictionary does.\n */\nfunction setupTokens(_ref2) {\n  let {\n    tokens,\n    path = [],\n    setupToken\n  } = _ref2;\n  if (has(tokens, 'value')) {\n    return setupToken({\n      token: tokens,\n      path\n    });\n  }\n  const output = {};\n  for (const name in tokens) {\n    if (has(tokens, name)) {\n      const value = tokens[name];\n      const nextTokens = isObject(value) ? value : {\n        value\n      };\n      output[name] = setupTokens({\n        tokens: nextTokens,\n        path: path.concat(name),\n        setupToken\n      });\n    }\n  }\n  return output;\n}\nexport { CSS_VARIABLE_PREFIX, cssNameTransform, cssValue, isDesignToken, isShadowTokenObject, setupTokens };","map":{"version":3,"names":["kebabCase","usesReference","isObject","has","isString","CSS_VARIABLE_PREFIX","SHADOW_PROPERTIES","referenceValue","value","path","replace","split","concat","cssNameTransform","cssValue","token","isShadowTokenObject","map","property","join","_ref","isDesignToken","setupTokens","_ref2","tokens","setupToken","output","name","nextTokens"],"sources":["/Users/raphaperso/Documents/Hub/amplify_test/notes/node_modules/@aws-amplify/ui/dist/esm/theme/utils.mjs"],"sourcesContent":["import kebabCase from 'lodash/kebabCase.js';\nimport usesReference from 'style-dictionary/lib/utils/references/usesReference.js';\nimport '@aws-amplify/core/internals/utils';\nimport '../utils/setUserAgent/constants.mjs';\nimport { isObject, has, isString } from '../utils/utils.mjs';\n\nconst CSS_VARIABLE_PREFIX = 'amplify';\n// Important: these properties should not be altered in\n// order to maintain the expected order of the CSS `box-shadow` property\nconst SHADOW_PROPERTIES = [\n    'offsetX',\n    'offsetY',\n    'blurRadius',\n    'spreadRadius',\n    'color',\n];\nfunction referenceValue(value) {\n    if (!value)\n        return '';\n    if (usesReference(value)) {\n        const path = value.replace(/\\{|\\}/g, '').replace('.value', '').split('.');\n        return `var(--${cssNameTransform({ path })})`;\n    }\n    return value;\n}\nfunction cssValue(token) {\n    const { value } = token;\n    if (isString(value)) {\n        return referenceValue(value);\n    }\n    if (isShadowTokenObject(value)) {\n        return SHADOW_PROPERTIES.map((property) => {\n            return referenceValue(\n            // lookup property against `token` first for custom non-nested value, then lookup\n            // property against `value` for design token value\n            isShadowTokenObject(token) ? token[property] : value[property]);\n        }).join(' ');\n    }\n    return value;\n}\nfunction cssNameTransform({ path = [] }) {\n    return `${kebabCase([CSS_VARIABLE_PREFIX, ...path].join(' '))}`;\n}\n/**\n * Helper function to test if something is a design token or not.\n * Used in the React component style props.\n *\n * @param value - thing to test if it is a design token or not\n * @returns boolean\n */\nfunction isDesignToken(value) {\n    return isObject(value) && has(value, 'value');\n}\nfunction isShadowTokenObject(value) {\n    return isObject(value) && has(value, 'offsetX');\n}\n/**\n * Recursive function that will walk down the token object\n * and perform the setupToken function on each token.\n * Similar to what Style Dictionary does.\n */\nfunction setupTokens({ tokens, path = [], setupToken, }) {\n    if (has(tokens, 'value')) {\n        return setupToken({ token: tokens, path });\n    }\n    const output = {};\n    for (const name in tokens) {\n        if (has(tokens, name)) {\n            const value = tokens[name];\n            const nextTokens = isObject(value) ? value : { value };\n            output[name] = setupTokens({\n                tokens: nextTokens,\n                path: path.concat(name),\n                setupToken,\n            });\n        }\n    }\n    return output;\n}\n\nexport { CSS_VARIABLE_PREFIX, cssNameTransform, cssValue, isDesignToken, isShadowTokenObject, setupTokens };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}