{"ast":null,"code":"import { map } from 'rxjs';\nimport { generateGraphQLDocument, buildGraphQLVariables, authModeParams, getCustomHeaders, initializeModel } from '../APIClient.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction subscriptionFactory(client, modelIntrospection, model, operation) {\n  const {\n    name\n  } = model;\n  const subscription = args => {\n    const query = generateGraphQLDocument(modelIntrospection, name, operation, args);\n    const variables = buildGraphQLVariables(model, operation, args, modelIntrospection);\n    const auth = authModeParams(client, args);\n    const headers = getCustomHeaders(client, args === null || args === void 0 ? void 0 : args.headers);\n    const observable = client.graphql({\n      ...auth,\n      query,\n      variables\n    }, headers);\n    return observable.pipe(map(value => {\n      const [key] = Object.keys(value.data);\n      const data = value.data[key];\n      const [initialized] = initializeModel(client, name, [data], modelIntrospection, auth.authMode, auth.authToken);\n      return initialized;\n    }));\n  };\n  return subscription;\n}\nexport { subscriptionFactory };","map":{"version":3,"names":["subscriptionFactory","client","modelIntrospection","model","operation","name","subscription","args","query","generateGraphQLDocument","variables","buildGraphQLVariables","auth","authModeParams","headers","getCustomHeaders","observable","graphql","pipe","map","value","key","Object","keys","data","initialized","initializeModel","authMode","authToken"],"sources":["/Users/raphaperso/Documents/Hub/amplify_test/notes/node_modules/@aws-amplify/api-graphql/src/internals/operations/subscription.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { map } from 'rxjs';\nimport { initializeModel, generateGraphQLDocument, buildGraphQLVariables, authModeParams, getCustomHeaders, } from '../APIClient';\nexport function subscriptionFactory(client, modelIntrospection, model, operation) {\n    const { name } = model;\n    const subscription = (args) => {\n        const query = generateGraphQLDocument(modelIntrospection, name, operation, args);\n        const variables = buildGraphQLVariables(model, operation, args, modelIntrospection);\n        const auth = authModeParams(client, args);\n        const headers = getCustomHeaders(client, args?.headers);\n        const observable = client.graphql({\n            ...auth,\n            query,\n            variables,\n        }, headers);\n        return observable.pipe(map(value => {\n            const [key] = Object.keys(value.data);\n            const data = value.data[key];\n            const [initialized] = initializeModel(client, name, [data], modelIntrospection, auth.authMode, auth.authToken);\n            return initialized;\n        }));\n    };\n    return subscription;\n}\n"],"mappings":";;;AAAA;AACA;AAGO,SAASA,mBAAmBA,CAACC,MAAM,EAAEC,kBAAkB,EAAEC,KAAK,EAAEC,SAAS,EAAE;EAC9E,MAAM;IAAEC;EAAI,CAAE,GAAGF,KAAK;EACtB,MAAMG,YAAY,GAAIC,IAAI,IAAK;IAC3B,MAAMC,KAAK,GAAGC,uBAAuB,CAACP,kBAAkB,EAAEG,IAAI,EAAED,SAAS,EAAEG,IAAI,CAAC;IAChF,MAAMG,SAAS,GAAGC,qBAAqB,CAACR,KAAK,EAAEC,SAAS,EAAEG,IAAI,EAAEL,kBAAkB,CAAC;IACnF,MAAMU,IAAI,GAAGC,cAAc,CAACZ,MAAM,EAAEM,IAAI,CAAC;IACzC,MAAMO,OAAO,GAAGC,gBAAgB,CAACd,MAAM,EAAEM,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEO,OAAO,CAAC;IACvD,MAAME,UAAU,GAAGf,MAAM,CAACgB,OAAO,CAAC;MAC9B,GAAGL,IAAI;MACPJ,KAAK;MACLE;IACZ,CAAS,EAAEI,OAAO,CAAC;IACX,OAAOE,UAAU,CAACE,IAAI,CAACC,GAAG,CAACC,KAAK,IAAI;MAChC,MAAM,CAACC,GAAG,CAAC,GAAGC,MAAM,CAACC,IAAI,CAACH,KAAK,CAACI,IAAI,CAAC;MACrC,MAAMA,IAAI,GAAGJ,KAAK,CAACI,IAAI,CAACH,GAAG,CAAC;MAC5B,MAAM,CAACI,WAAW,CAAC,GAAGC,eAAe,CAACzB,MAAM,EAAEI,IAAI,EAAE,CAACmB,IAAI,CAAC,EAAEtB,kBAAkB,EAAEU,IAAI,CAACe,QAAQ,EAAEf,IAAI,CAACgB,SAAS,CAAC;MAC9G,OAAOH,WAAW;IAC9B,CAAS,CAAC,CAAC;EACX,CAAK;EACD,OAAOnB,YAAY;AACvB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}