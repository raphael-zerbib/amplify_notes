{"ast":null,"code":"import { Hub } from 'aws-amplify/utils';\nimport '@aws-amplify/core/internals/utils';\nimport '../../utils/setUserAgent/constants.mjs';\nimport { isFunction } from '../../utils/utils.mjs';\n\n/**\n * Handles Amplify JS Auth hub events, by forwarding hub events as appropriate\n * xstate events.\n */\nconst defaultAuthHubHandler = (_ref, service, options) => {\n  let {\n    payload\n  } = _ref;\n  const {\n    event\n  } = payload;\n  const {\n    send\n  } = service;\n  const {\n    onSignIn,\n    onSignOut\n  } = options !== null && options !== void 0 ? options : {};\n  switch (event) {\n    case 'signedIn':\n      {\n        if (isFunction(onSignIn)) {\n          onSignIn(payload);\n        }\n        break;\n      }\n    case 'signInWithRedirect':\n      {\n        send('SIGN_IN_WITH_REDIRECT');\n        break;\n      }\n    case 'signedOut':\n    case 'tokenRefresh_failure':\n      {\n        if (event === 'signedOut' && isFunction(onSignOut)) {\n          onSignOut();\n        }\n        send('SIGN_OUT');\n        break;\n      }\n  }\n};\n/**\n * Listens to external auth Hub events and sends corresponding event to\n * the `service.send` of interest\n *\n * @param service - contains state machine `send` function\n * @param handler - auth event handler\n * @returns function that unsubscribes to the hub evenmt\n */\nconst listenToAuthHub = function (service) {\n  let handler = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultAuthHubHandler;\n  const eventHandler = data => handler(data, service);\n  return Hub.listen('auth', eventHandler, 'authenticator-hub-handler');\n};\nexport { defaultAuthHubHandler, listenToAuthHub };","map":{"version":3,"names":["Hub","isFunction","defaultAuthHubHandler","_ref","service","options","payload","event","send","onSignIn","onSignOut","listenToAuthHub","handler","arguments","length","undefined","eventHandler","data","listen"],"sources":["/Users/raphaperso/Documents/Hub/amplify_test/notes/node_modules/@aws-amplify/ui/dist/esm/helpers/authenticator/defaultAuthHubHandler.mjs"],"sourcesContent":["import { Hub } from 'aws-amplify/utils';\nimport '@aws-amplify/core/internals/utils';\nimport '../../utils/setUserAgent/constants.mjs';\nimport { isFunction } from '../../utils/utils.mjs';\n\n/**\n * Handles Amplify JS Auth hub events, by forwarding hub events as appropriate\n * xstate events.\n */\nconst defaultAuthHubHandler = ({ payload }, service, options) => {\n    const { event } = payload;\n    const { send } = service;\n    const { onSignIn, onSignOut } = options ?? {};\n    switch (event) {\n        case 'signedIn': {\n            if (isFunction(onSignIn)) {\n                onSignIn(payload);\n            }\n            break;\n        }\n        case 'signInWithRedirect': {\n            send('SIGN_IN_WITH_REDIRECT');\n            break;\n        }\n        case 'signedOut':\n        case 'tokenRefresh_failure': {\n            if (event === 'signedOut' && isFunction(onSignOut)) {\n                onSignOut();\n            }\n            send('SIGN_OUT');\n            break;\n        }\n    }\n};\n/**\n * Listens to external auth Hub events and sends corresponding event to\n * the `service.send` of interest\n *\n * @param service - contains state machine `send` function\n * @param handler - auth event handler\n * @returns function that unsubscribes to the hub evenmt\n */\nconst listenToAuthHub = (service, handler = defaultAuthHubHandler) => {\n    const eventHandler = (data) => handler(data, service);\n    return Hub.listen('auth', eventHandler, 'authenticator-hub-handler');\n};\n\nexport { defaultAuthHubHandler, listenToAuthHub };\n"],"mappings":"AAAA,SAASA,GAAG,QAAQ,mBAAmB;AACvC,OAAO,mCAAmC;AAC1C,OAAO,wCAAwC;AAC/C,SAASC,UAAU,QAAQ,uBAAuB;;AAElD;AACA;AACA;AACA;AACA,MAAMC,qBAAqB,GAAGA,CAAAC,IAAA,EAAcC,OAAO,EAAEC,OAAO,KAAK;EAAA,IAAlC;IAAEC;EAAQ,CAAC,GAAAH,IAAA;EACtC,MAAM;IAAEI;EAAM,CAAC,GAAGD,OAAO;EACzB,MAAM;IAAEE;EAAK,CAAC,GAAGJ,OAAO;EACxB,MAAM;IAAEK,QAAQ;IAAEC;EAAU,CAAC,GAAGL,OAAO,aAAPA,OAAO,cAAPA,OAAO,GAAI,CAAC,CAAC;EAC7C,QAAQE,KAAK;IACT,KAAK,UAAU;MAAE;QACb,IAAIN,UAAU,CAACQ,QAAQ,CAAC,EAAE;UACtBA,QAAQ,CAACH,OAAO,CAAC;QACrB;QACA;MACJ;IACA,KAAK,oBAAoB;MAAE;QACvBE,IAAI,CAAC,uBAAuB,CAAC;QAC7B;MACJ;IACA,KAAK,WAAW;IAChB,KAAK,sBAAsB;MAAE;QACzB,IAAID,KAAK,KAAK,WAAW,IAAIN,UAAU,CAACS,SAAS,CAAC,EAAE;UAChDA,SAAS,CAAC,CAAC;QACf;QACAF,IAAI,CAAC,UAAU,CAAC;QAChB;MACJ;EACJ;AACJ,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMG,eAAe,GAAG,SAAAA,CAACP,OAAO,EAAsC;EAAA,IAApCQ,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGX,qBAAqB;EAC7D,MAAMc,YAAY,GAAIC,IAAI,IAAKL,OAAO,CAACK,IAAI,EAAEb,OAAO,CAAC;EACrD,OAAOJ,GAAG,CAACkB,MAAM,CAAC,MAAM,EAAEF,YAAY,EAAE,2BAA2B,CAAC;AACxE,CAAC;AAED,SAASd,qBAAqB,EAAES,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}