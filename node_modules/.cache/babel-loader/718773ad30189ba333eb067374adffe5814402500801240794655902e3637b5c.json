{"ast":null,"code":"import { Hub } from '@aws-amplify/core';\nimport { graphql, cancel, isCancelError } from './v6.mjs';\nimport { generateEnumsProperty } from './utils/clientProperties/generateEnumsProperty.mjs';\nimport { generateModelsProperty } from './utils/clientProperties/generateModelsProperty.mjs';\nimport { isApiGraphQLConfig } from './utils/runtimeTypeGuards/isApiGraphQLProviderConfig.mjs';\nimport { generateCustomQueriesProperty, generateCustomMutationsProperty } from './generateCustomOperationsProperty.mjs';\nimport { __amplify, __authMode, __authToken, __headers } from '../types/index.mjs';\nimport { isConfigureEventWithResourceConfig } from './utils/runtimeTypeGuards/isConfigureEventWithResourceConfig.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * @private\n *\n * Creates a client that can be used to make GraphQL requests, using a provided `AmplifyClassV6`\n * compatible context object for config and auth fetching.\n *\n * @param params\n * @returns\n */\nfunction generateClient(params) {\n  var _params$amplify$getCo;\n  const client = {\n    [__amplify]: params.amplify,\n    [__authMode]: params.authMode,\n    [__authToken]: params.authToken,\n    [__headers]: params.headers,\n    graphql,\n    cancel,\n    isCancelError,\n    models: emptyProperty,\n    enums: emptyProperty,\n    queries: emptyProperty,\n    mutations: emptyProperty\n  };\n  const apiGraphqlConfig = (_params$amplify$getCo = params.amplify.getConfig().API) === null || _params$amplify$getCo === void 0 ? void 0 : _params$amplify$getCo.GraphQL;\n  if (isApiGraphQLConfig(apiGraphqlConfig)) {\n    client.models = generateModelsProperty(client, apiGraphqlConfig);\n    client.enums = generateEnumsProperty(apiGraphqlConfig);\n    client.queries = generateCustomQueriesProperty(client, apiGraphqlConfig);\n    client.mutations = generateCustomMutationsProperty(client, apiGraphqlConfig);\n  } else {\n    // This happens when the `Amplify.configure()` call gets evaluated after the `generateClient()` call.\n    //\n    // Cause: when the `generateClient()` and the `Amplify.configure()` calls are located in\n    // different source files, script bundlers may randomly arrange their orders in the production\n    // bundle.\n    //\n    // With the current implementation, the `client.models` instance created by `generateClient()`\n    // will be rebuilt on every `Amplify.configure()` call that's provided with a valid GraphQL\n    // provider configuration.\n    //\n    // TODO: revisit, and reverify this approach when enabling multiple clients for multi-endpoints\n    // configuration.\n    generateModelsPropertyOnAmplifyConfigure(client);\n  }\n  return client;\n}\nconst generateModelsPropertyOnAmplifyConfigure = clientRef => {\n  Hub.listen('core', coreEvent => {\n    var _coreEvent$payload$da;\n    if (!isConfigureEventWithResourceConfig(coreEvent.payload)) {\n      return;\n    }\n    const apiGraphQLConfig = (_coreEvent$payload$da = coreEvent.payload.data.API) === null || _coreEvent$payload$da === void 0 ? void 0 : _coreEvent$payload$da.GraphQL;\n    if (isApiGraphQLConfig(apiGraphQLConfig)) {\n      clientRef.models = generateModelsProperty(clientRef, apiGraphQLConfig);\n      clientRef.enums = generateEnumsProperty(apiGraphQLConfig);\n      clientRef.queries = generateCustomQueriesProperty(clientRef, apiGraphQLConfig);\n      clientRef.mutations = generateCustomMutationsProperty(clientRef, apiGraphQLConfig);\n    }\n  });\n};\nconst emptyProperty = new Proxy({}, {\n  get() {\n    throw new Error('Client could not be generated. This is likely due to `Amplify.configure()` not being called prior to `generateClient()` or because the configuration passed to `Amplify.configure()` is missing GraphQL provider configuration.');\n  }\n});\nexport { generateClient };","map":{"version":3,"names":["generateClient","params","_params$amplify$getCo","client","__amplify","amplify","__authMode","authMode","__authToken","authToken","__headers","headers","graphql","cancel","isCancelError","models","emptyProperty","enums","queries","mutations","apiGraphqlConfig","getConfig","API","GraphQL","isApiGraphQLConfig","generateModelsProperty","generateEnumsProperty","generateCustomQueriesProperty","generateCustomMutationsProperty","generateModelsPropertyOnAmplifyConfigure","clientRef","Hub","listen","coreEvent","_coreEvent$payload$da","isConfigureEventWithResourceConfig","payload","apiGraphQLConfig","data","Proxy","get","Error"],"sources":["/Users/raphaperso/Documents/Hub/amplify_test/notes/node_modules/@aws-amplify/api-graphql/src/internals/generateClient.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Hub } from '@aws-amplify/core';\nimport { graphql, cancel, isCancelError } from './v6';\nimport { generateEnumsProperty } from './utils/clientProperties/generateEnumsProperty';\nimport { generateModelsProperty } from './utils/clientProperties/generateModelsProperty';\nimport { isApiGraphQLConfig } from './utils/runtimeTypeGuards/isApiGraphQLProviderConfig';\nimport { generateCustomQueriesProperty, generateCustomMutationsProperty, } from './generateCustomOperationsProperty';\nimport { __amplify, __authMode, __authToken, __headers, } from '../types';\nimport { isConfigureEventWithResourceConfig } from './utils/runtimeTypeGuards/isConfigureEventWithResourceConfig';\n/**\n * @private\n *\n * Creates a client that can be used to make GraphQL requests, using a provided `AmplifyClassV6`\n * compatible context object for config and auth fetching.\n *\n * @param params\n * @returns\n */\nexport function generateClient(params) {\n    const client = {\n        [__amplify]: params.amplify,\n        [__authMode]: params.authMode,\n        [__authToken]: params.authToken,\n        [__headers]: params.headers,\n        graphql,\n        cancel,\n        isCancelError,\n        models: emptyProperty,\n        enums: emptyProperty,\n        queries: emptyProperty,\n        mutations: emptyProperty,\n    };\n    const apiGraphqlConfig = params.amplify.getConfig().API?.GraphQL;\n    if (isApiGraphQLConfig(apiGraphqlConfig)) {\n        client.models = generateModelsProperty(client, apiGraphqlConfig);\n        client.enums = generateEnumsProperty(apiGraphqlConfig);\n        client.queries = generateCustomQueriesProperty(client, apiGraphqlConfig);\n        client.mutations = generateCustomMutationsProperty(client, apiGraphqlConfig);\n    }\n    else {\n        // This happens when the `Amplify.configure()` call gets evaluated after the `generateClient()` call.\n        //\n        // Cause: when the `generateClient()` and the `Amplify.configure()` calls are located in\n        // different source files, script bundlers may randomly arrange their orders in the production\n        // bundle.\n        //\n        // With the current implementation, the `client.models` instance created by `generateClient()`\n        // will be rebuilt on every `Amplify.configure()` call that's provided with a valid GraphQL\n        // provider configuration.\n        //\n        // TODO: revisit, and reverify this approach when enabling multiple clients for multi-endpoints\n        // configuration.\n        generateModelsPropertyOnAmplifyConfigure(client);\n    }\n    return client;\n}\nconst generateModelsPropertyOnAmplifyConfigure = (clientRef) => {\n    Hub.listen('core', coreEvent => {\n        if (!isConfigureEventWithResourceConfig(coreEvent.payload)) {\n            return;\n        }\n        const apiGraphQLConfig = coreEvent.payload.data.API?.GraphQL;\n        if (isApiGraphQLConfig(apiGraphQLConfig)) {\n            clientRef.models = generateModelsProperty(clientRef, apiGraphQLConfig);\n            clientRef.enums = generateEnumsProperty(apiGraphQLConfig);\n            clientRef.queries = generateCustomQueriesProperty(clientRef, apiGraphQLConfig);\n            clientRef.mutations = generateCustomMutationsProperty(clientRef, apiGraphQLConfig);\n        }\n    });\n};\nconst emptyProperty = new Proxy({}, {\n    get() {\n        throw new Error('Client could not be generated. This is likely due to `Amplify.configure()` not being called prior to `generateClient()` or because the configuration passed to `Amplify.configure()` is missing GraphQL provider configuration.');\n    },\n});\n"],"mappings":";;;;;;;;;AAAA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,cAAcA,CAACC,MAAM,EAAE;EAAA,IAAAC,qBAAA;EACnC,MAAMC,MAAM,GAAG;IACX,CAACC,SAAS,GAAGH,MAAM,CAACI,OAAO;IAC3B,CAACC,UAAU,GAAGL,MAAM,CAACM,QAAQ;IAC7B,CAACC,WAAW,GAAGP,MAAM,CAACQ,SAAS;IAC/B,CAACC,SAAS,GAAGT,MAAM,CAACU,OAAO;IAC3BC,OAAO;IACPC,MAAM;IACNC,aAAa;IACbC,MAAM,EAAEC,aAAa;IACrBC,KAAK,EAAED,aAAa;IACpBE,OAAO,EAAEF,aAAa;IACtBG,SAAS,EAAEH;EACnB,CAAK;EACD,MAAMI,gBAAgB,IAAAlB,qBAAA,GAAGD,MAAM,CAACI,OAAO,CAACgB,SAAS,EAAE,CAACC,GAAG,cAAApB,qBAAA,uBAA9BA,qBAAA,CAAgCqB,OAAO;EAChE,IAAIC,kBAAkB,CAACJ,gBAAgB,CAAC,EAAE;IACtCjB,MAAM,CAACY,MAAM,GAAGU,sBAAsB,CAACtB,MAAM,EAAEiB,gBAAgB,CAAC;IAChEjB,MAAM,CAACc,KAAK,GAAGS,qBAAqB,CAACN,gBAAgB,CAAC;IACtDjB,MAAM,CAACe,OAAO,GAAGS,6BAA6B,CAACxB,MAAM,EAAEiB,gBAAgB,CAAC;IACxEjB,MAAM,CAACgB,SAAS,GAAGS,+BAA+B,CAACzB,MAAM,EAAEiB,gBAAgB,CAAC;EACpF,CAAK,MACI;IACT;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACQS,wCAAwC,CAAC1B,MAAM,CAAC;EACxD;EACI,OAAOA,MAAM;AACjB;AACA,MAAM0B,wCAAwC,GAAIC,SAAS,IAAK;EAC5DC,GAAG,CAACC,MAAM,CAAC,MAAM,EAAEC,SAAS,IAAI;IAAA,IAAAC,qBAAA;IAC5B,IAAI,CAACC,kCAAkC,CAACF,SAAS,CAACG,OAAO,CAAC,EAAE;MACxD;IACZ;IACQ,MAAMC,gBAAgB,IAAAH,qBAAA,GAAGD,SAAS,CAACG,OAAO,CAACE,IAAI,CAAChB,GAAG,cAAAY,qBAAA,uBAA1BA,qBAAA,CAA4BX,OAAO;IAC5D,IAAIC,kBAAkB,CAACa,gBAAgB,CAAC,EAAE;MACtCP,SAAS,CAACf,MAAM,GAAGU,sBAAsB,CAACK,SAAS,EAAEO,gBAAgB,CAAC;MACtEP,SAAS,CAACb,KAAK,GAAGS,qBAAqB,CAACW,gBAAgB,CAAC;MACzDP,SAAS,CAACZ,OAAO,GAAGS,6BAA6B,CAACG,SAAS,EAAEO,gBAAgB,CAAC;MAC9EP,SAAS,CAACX,SAAS,GAAGS,+BAA+B,CAACE,SAAS,EAAEO,gBAAgB,CAAC;IAC9F;EACA,CAAK,CAAC;AACN,CAAC;AACD,MAAMrB,aAAa,GAAG,IAAIuB,KAAK,CAAC,EAAE,EAAE;EAChCC,GAAGA,CAAA,EAAG;IACF,MAAM,IAAIC,KAAK,CAAC,iOAAiO,CAAC;EAC1P;AACA,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}