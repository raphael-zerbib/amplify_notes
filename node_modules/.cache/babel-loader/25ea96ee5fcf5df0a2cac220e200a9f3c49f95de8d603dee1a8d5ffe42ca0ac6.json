{"ast":null,"code":"import { OpType } from '../types.mjs';\nimport { getIdentifierValue } from './utils.mjs';\n\n// https://github.com/aws-amplify/amplify-js/blob/datastore-docs/packages/datastore/docs/sync-engine.md#merger\nclass ModelMerger {\n  constructor(outbox, ownSymbol) {\n    this.outbox = outbox;\n    this.ownSymbol = ownSymbol;\n  }\n  /**\n   *\n   * @param storage Storage adapter that contains the data.\n   * @param model The model from an outbox mutation.\n   * @returns The type of operation (INSERT/UPDATE/DELETE)\n   */\n  async merge(storage, model, modelDefinition) {\n    let result;\n    const mutationsForModel = await this.outbox.getForModel(storage, model, modelDefinition);\n    const isDelete = model._deleted;\n    if (mutationsForModel.length === 0) {\n      if (isDelete) {\n        result = OpType.DELETE;\n        await storage.delete(model, undefined, this.ownSymbol);\n      } else {\n        [[, result]] = await storage.save(model, undefined, this.ownSymbol);\n      }\n    }\n    return result;\n  }\n  async mergePage(storage, modelConstructor, items, modelDefinition) {\n    const itemsMap = new Map();\n    for (const item of items) {\n      // merge items by model id. Latest record for a given id remains.\n      const modelId = getIdentifierValue(modelDefinition, item);\n      itemsMap.set(modelId, item);\n    }\n    const page = [...itemsMap.values()];\n    return await storage.batchSave(modelConstructor, page, this.ownSymbol);\n  }\n}\nexport { ModelMerger };","map":{"version":3,"names":["ModelMerger","constructor","outbox","ownSymbol","merge","storage","model","modelDefinition","result","mutationsForModel","getForModel","isDelete","_deleted","length","OpType","DELETE","delete","undefined","save","mergePage","modelConstructor","items","itemsMap","Map","item","modelId","getIdentifierValue","set","page","values","batchSave"],"sources":["/Users/raphaperso/Documents/Hub/amplify_test/notes/node_modules/@aws-amplify/datastore/src/sync/merger.ts"],"sourcesContent":["import { OpType, } from '../types';\nimport { getIdentifierValue } from './utils';\n// https://github.com/aws-amplify/amplify-js/blob/datastore-docs/packages/datastore/docs/sync-engine.md#merger\nclass ModelMerger {\n    constructor(outbox, ownSymbol) {\n        this.outbox = outbox;\n        this.ownSymbol = ownSymbol;\n    }\n    /**\n     *\n     * @param storage Storage adapter that contains the data.\n     * @param model The model from an outbox mutation.\n     * @returns The type of operation (INSERT/UPDATE/DELETE)\n     */\n    async merge(storage, model, modelDefinition) {\n        let result;\n        const mutationsForModel = await this.outbox.getForModel(storage, model, modelDefinition);\n        const isDelete = model._deleted;\n        if (mutationsForModel.length === 0) {\n            if (isDelete) {\n                result = OpType.DELETE;\n                await storage.delete(model, undefined, this.ownSymbol);\n            }\n            else {\n                [[, result]] = await storage.save(model, undefined, this.ownSymbol);\n            }\n        }\n        return result;\n    }\n    async mergePage(storage, modelConstructor, items, modelDefinition) {\n        const itemsMap = new Map();\n        for (const item of items) {\n            // merge items by model id. Latest record for a given id remains.\n            const modelId = getIdentifierValue(modelDefinition, item);\n            itemsMap.set(modelId, item);\n        }\n        const page = [...itemsMap.values()];\n        return await storage.batchSave(modelConstructor, page, this.ownSymbol);\n    }\n}\nexport { ModelMerger };\n"],"mappings":";;;AAEA;AACA,MAAMA,WAAW,CAAC;EACdC,WAAWA,CAACC,MAAM,EAAEC,SAAS,EAAE;IAC3B,IAAI,CAACD,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,SAAS,GAAGA,SAAS;EAClC;EACA;AACA;AACA;AACA;AACA;AACA;EACI,MAAMC,KAAKA,CAACC,OAAO,EAAEC,KAAK,EAAEC,eAAe,EAAE;IACzC,IAAIC,MAAM;IACV,MAAMC,iBAAiB,GAAG,MAAM,IAAI,CAACP,MAAM,CAACQ,WAAW,CAACL,OAAO,EAAEC,KAAK,EAAEC,eAAe,CAAC;IACxF,MAAMI,QAAQ,GAAGL,KAAK,CAACM,QAAQ;IAC/B,IAAIH,iBAAiB,CAACI,MAAM,KAAK,CAAC,EAAE;MAChC,IAAIF,QAAQ,EAAE;QACVH,MAAM,GAAGM,MAAM,CAACC,MAAM;QACtB,MAAMV,OAAO,CAACW,MAAM,CAACV,KAAK,EAAEW,SAAS,EAAE,IAAI,CAACd,SAAS,CAAC;MACtE,CAAa,MACI;QACD,CAAC,GAAGK,MAAM,CAAC,CAAC,GAAG,MAAMH,OAAO,CAACa,IAAI,CAACZ,KAAK,EAAEW,SAAS,EAAE,IAAI,CAACd,SAAS,CAAC;MACnF;IACA;IACQ,OAAOK,MAAM;EACrB;EACI,MAAMW,SAASA,CAACd,OAAO,EAAEe,gBAAgB,EAAEC,KAAK,EAAEd,eAAe,EAAE;IAC/D,MAAMe,QAAQ,GAAG,IAAIC,GAAG,EAAE;IAC1B,KAAK,MAAMC,IAAI,IAAIH,KAAK,EAAE;MAClC;MACY,MAAMI,OAAO,GAAGC,kBAAkB,CAACnB,eAAe,EAAEiB,IAAI,CAAC;MACzDF,QAAQ,CAACK,GAAG,CAACF,OAAO,EAAED,IAAI,CAAC;IACvC;IACQ,MAAMI,IAAI,GAAG,CAAC,GAAGN,QAAQ,CAACO,MAAM,EAAE,CAAC;IACnC,OAAO,MAAMxB,OAAO,CAACyB,SAAS,CAACV,gBAAgB,EAAEQ,IAAI,EAAE,IAAI,CAACzB,SAAS,CAAC;EAC9E;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}