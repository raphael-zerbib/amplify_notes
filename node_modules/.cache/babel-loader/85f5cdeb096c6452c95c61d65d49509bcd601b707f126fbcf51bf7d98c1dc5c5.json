{"ast":null,"code":"import { isFunction, classNames, ComponentClassName } from '@aws-amplify/ui';\nimport * as React from 'react';\nimport { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\nimport { AutocompleteOption } from './AutocompleteOption.mjs';\nimport { AutocompleteMenu } from './AutocompleteMenu.mjs';\nimport { useAutocomplete } from './useAutocomplete.mjs';\nimport { HighlightMatch } from '../HighlightMatch/HighlightMatch.mjs';\nimport { SearchField } from '../SearchField/SearchField.mjs';\nimport { View } from '../View/View.mjs';\nconst AutocompletePrimitive = (_ref, ref) => {\n  let {\n    className,\n    defaultValue,\n    value,\n    isLoading = false,\n    menuSlots = {},\n    options,\n    optionFilter,\n    onBlur,\n    onChange,\n    onClear,\n    onClick,\n    onSelect,\n    onSubmit,\n    renderOption,\n    testId,\n    ...rest\n  } = _ref;\n  const {\n    activeOptionId,\n    autocompleteId,\n    composedValue,\n    filteredOptions,\n    handleOnBlur,\n    handleOnClear,\n    handleOnClick,\n    handleOnChange,\n    handleOnKeyDown,\n    isControlled,\n    isCustomFiltering,\n    isMenuOpen,\n    listboxId,\n    menuId,\n    optionBaseId,\n    setActiveOption,\n    setIsMenuOpen,\n    setInternalValue\n  } = useAutocomplete({\n    defaultValue,\n    value,\n    options,\n    optionFilter,\n    onBlur,\n    onChange,\n    onClear,\n    onClick,\n    onSelect,\n    onSubmit\n  });\n  const comboboxProps = {\n    role: 'combobox',\n    'aria-activedescendant': activeOptionId,\n    'aria-autocomplete': 'list',\n    'aria-controls': isMenuOpen ? menuId : undefined,\n    'aria-expanded': isMenuOpen,\n    'aria-haspopup': 'listbox',\n    'aria-owns': isMenuOpen ? menuId : undefined\n  };\n  const Options = filteredOptions.map((option, idx) => {\n    const {\n      id,\n      label,\n      ...rest\n    } = option;\n    const handleOnClick = () => {\n      setIsMenuOpen(false);\n      setActiveOption(null);\n      if (!isControlled) {\n        setInternalValue(label);\n      }\n      if (isFunction(onSelect)) {\n        onSelect(option);\n      }\n    };\n    // This is required. Mousedown event will fire a blur event by default\n    // and so the menu will close before the click event on an option gets a chance to fire\n    const handleOnMouseDown = event => {\n      event.preventDefault();\n    };\n    const handleOnMouseMove = () => {\n      setActiveOption(option);\n    };\n    const optionId = id !== null && id !== void 0 ? id : \"\".concat(optionBaseId, \"-option-\").concat(idx);\n    const isActive = optionId === activeOptionId;\n    return React.createElement(AutocompleteOption, {\n      isActive: isActive,\n      id: optionId,\n      key: optionId,\n      onClick: handleOnClick,\n      onMouseDown: handleOnMouseDown,\n      onMouseMove: handleOnMouseMove,\n      ...rest\n    }, isFunction(renderOption) ? renderOption(option, composedValue) : isCustomFiltering ? label : React.createElement(HighlightMatch, {\n      query: composedValue\n    }, label));\n  });\n  return React.createElement(View, {\n    className: classNames(ComponentClassName.Autocomplete, className),\n    id: autocompleteId,\n    testId: testId\n  }, React.createElement(SearchField, {\n    hasSearchButton: false,\n    hasSearchIcon: true,\n    onBlur: handleOnBlur,\n    onChange: handleOnChange,\n    onClear: handleOnClear,\n    onClick: handleOnClick,\n    onKeyDown: handleOnKeyDown,\n    ref: ref,\n    value: composedValue,\n    ...comboboxProps,\n    ...rest\n  }), isMenuOpen ? React.createElement(AutocompleteMenu, {\n    id: menuId,\n    isLoading: isLoading,\n    listboxId: listboxId,\n    ...menuSlots\n  }, Options) : null);\n};\n/**\n * [ðŸ“– Docs](https://ui.docs.amplify.aws/react/components/autocomplete)\n */\nconst Autocomplete = primitiveWithForwardRef(AutocompletePrimitive);\nAutocomplete.displayName = 'Autocomplete';\nexport { Autocomplete, AutocompletePrimitive };","map":{"version":3,"names":["isFunction","classNames","ComponentClassName","React","primitiveWithForwardRef","AutocompleteOption","AutocompleteMenu","useAutocomplete","HighlightMatch","SearchField","View","AutocompletePrimitive","_ref","ref","className","defaultValue","value","isLoading","menuSlots","options","optionFilter","onBlur","onChange","onClear","onClick","onSelect","onSubmit","renderOption","testId","rest","activeOptionId","autocompleteId","composedValue","filteredOptions","handleOnBlur","handleOnClear","handleOnClick","handleOnChange","handleOnKeyDown","isControlled","isCustomFiltering","isMenuOpen","listboxId","menuId","optionBaseId","setActiveOption","setIsMenuOpen","setInternalValue","comboboxProps","role","undefined","Options","map","option","idx","id","label","handleOnMouseDown","event","preventDefault","handleOnMouseMove","optionId","concat","isActive","createElement","key","onMouseDown","onMouseMove","query","Autocomplete","hasSearchButton","hasSearchIcon","onKeyDown","displayName"],"sources":["/Users/raphaperso/Documents/Hub/amplify_test/notes/node_modules/@aws-amplify/ui-react/dist/esm/primitives/Autocomplete/Autocomplete.mjs"],"sourcesContent":["import { isFunction, classNames, ComponentClassName } from '@aws-amplify/ui';\nimport * as React from 'react';\nimport { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\nimport { AutocompleteOption } from './AutocompleteOption.mjs';\nimport { AutocompleteMenu } from './AutocompleteMenu.mjs';\nimport { useAutocomplete } from './useAutocomplete.mjs';\nimport { HighlightMatch } from '../HighlightMatch/HighlightMatch.mjs';\nimport { SearchField } from '../SearchField/SearchField.mjs';\nimport { View } from '../View/View.mjs';\n\nconst AutocompletePrimitive = ({ className, defaultValue, value, isLoading = false, menuSlots = {}, options, optionFilter, onBlur, onChange, onClear, onClick, onSelect, onSubmit, renderOption, testId, ...rest }, ref) => {\n    const { activeOptionId, autocompleteId, composedValue, filteredOptions, handleOnBlur, handleOnClear, handleOnClick, handleOnChange, handleOnKeyDown, isControlled, isCustomFiltering, isMenuOpen, listboxId, menuId, optionBaseId, setActiveOption, setIsMenuOpen, setInternalValue, } = useAutocomplete({\n        defaultValue,\n        value,\n        options,\n        optionFilter,\n        onBlur,\n        onChange,\n        onClear,\n        onClick,\n        onSelect,\n        onSubmit,\n    });\n    const comboboxProps = {\n        role: 'combobox',\n        'aria-activedescendant': activeOptionId,\n        'aria-autocomplete': 'list',\n        'aria-controls': isMenuOpen ? menuId : undefined,\n        'aria-expanded': isMenuOpen,\n        'aria-haspopup': 'listbox',\n        'aria-owns': isMenuOpen ? menuId : undefined,\n    };\n    const Options = filteredOptions.map((option, idx) => {\n        const { id, label, ...rest } = option;\n        const handleOnClick = () => {\n            setIsMenuOpen(false);\n            setActiveOption(null);\n            if (!isControlled) {\n                setInternalValue(label);\n            }\n            if (isFunction(onSelect)) {\n                onSelect(option);\n            }\n        };\n        // This is required. Mousedown event will fire a blur event by default\n        // and so the menu will close before the click event on an option gets a chance to fire\n        const handleOnMouseDown = (event) => {\n            event.preventDefault();\n        };\n        const handleOnMouseMove = () => {\n            setActiveOption(option);\n        };\n        const optionId = id ?? `${optionBaseId}-option-${idx}`;\n        const isActive = optionId === activeOptionId;\n        return (React.createElement(AutocompleteOption, { isActive: isActive, id: optionId, key: optionId, onClick: handleOnClick, onMouseDown: handleOnMouseDown, onMouseMove: handleOnMouseMove, ...rest }, isFunction(renderOption) ? (renderOption(option, composedValue)) : isCustomFiltering ? (label) : (React.createElement(HighlightMatch, { query: composedValue }, label))));\n    });\n    return (React.createElement(View, { className: classNames(ComponentClassName.Autocomplete, className), id: autocompleteId, testId: testId },\n        React.createElement(SearchField, { hasSearchButton: false, hasSearchIcon: true, onBlur: handleOnBlur, onChange: handleOnChange, onClear: handleOnClear, onClick: handleOnClick, onKeyDown: handleOnKeyDown, ref: ref, value: composedValue, ...comboboxProps, ...rest }),\n        isMenuOpen ? (React.createElement(AutocompleteMenu, { id: menuId, isLoading: isLoading, listboxId: listboxId, ...menuSlots }, Options)) : null));\n};\n/**\n * [ðŸ“– Docs](https://ui.docs.amplify.aws/react/components/autocomplete)\n */\nconst Autocomplete = primitiveWithForwardRef(AutocompletePrimitive);\nAutocomplete.displayName = 'Autocomplete';\n\nexport { Autocomplete, AutocompletePrimitive };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}