{"ast":null,"code":"import * as React from 'react';\nimport { classNames, ComponentClassName, countryDialCodes } from '@aws-amplify/ui';\nimport { SelectField } from '../SelectField/SelectField.mjs';\nimport { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\nconst DialCodeSelectPrimitive = (_ref, ref) => {\n  let {\n    className,\n    dialCodeList,\n    isReadOnly,\n    ...props\n  } = _ref;\n  const dialList = dialCodeList !== null && dialCodeList !== void 0 ? dialCodeList : countryDialCodes;\n  const dialCodeOptions = React.useMemo(() => dialList.map(dialCode =>\n  // Regarding the `disabled` attribute, see comment in SelectField below\n  React.createElement(\"option\", {\n    key: dialCode,\n    value: dialCode,\n    disabled: isReadOnly\n  }, dialCode)), [dialList, isReadOnly]);\n  return React.createElement(SelectField\n  /*\n      Since <select> elements do not support the `readonly` html attribute, it is suggested to use the `disabled` html attribute\n      so that a screen reader will announce something to the user about the interactivity of the options list ( https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/readonly)\n    */, {\n    \"aria-disabled\": isReadOnly,\n    autoComplete: \"tel-country-code\",\n    className: classNames(ComponentClassName.CountryCodeSelect, ComponentClassName.DialCodeSelect, className),\n    labelHidden: true,\n    ref: ref,\n    ...props\n  }, dialCodeOptions);\n};\nconst DialCodeSelect = primitiveWithForwardRef(DialCodeSelectPrimitive);\nDialCodeSelect.displayName = 'DialCodeSelect';\nexport { DialCodeSelect };","map":{"version":3,"names":["React","classNames","ComponentClassName","countryDialCodes","SelectField","primitiveWithForwardRef","DialCodeSelectPrimitive","_ref","ref","className","dialCodeList","isReadOnly","props","dialList","dialCodeOptions","useMemo","map","dialCode","createElement","key","value","disabled","autoComplete","CountryCodeSelect","DialCodeSelect","labelHidden","displayName"],"sources":["/Users/raphaperso/Documents/Hub/amplify_test/notes/node_modules/@aws-amplify/ui-react/dist/esm/primitives/PhoneNumberField/DialCodeSelect.mjs"],"sourcesContent":["import * as React from 'react';\nimport { classNames, ComponentClassName, countryDialCodes } from '@aws-amplify/ui';\nimport { SelectField } from '../SelectField/SelectField.mjs';\nimport { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n\nconst DialCodeSelectPrimitive = ({ className, dialCodeList, isReadOnly, ...props }, ref) => {\n    const dialList = dialCodeList ?? countryDialCodes;\n    const dialCodeOptions = React.useMemo(() => dialList.map((dialCode) => (\n    // Regarding the `disabled` attribute, see comment in SelectField below\n    React.createElement(\"option\", { key: dialCode, value: dialCode, disabled: isReadOnly }, dialCode))), [dialList, isReadOnly]);\n    return (React.createElement(SelectField\n    /*\n        Since <select> elements do not support the `readonly` html attribute, it is suggested to use the `disabled` html attribute\n        so that a screen reader will announce something to the user about the interactivity of the options list ( https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/readonly)\n      */\n    , { \"aria-disabled\": isReadOnly, autoComplete: \"tel-country-code\", className: classNames(ComponentClassName.CountryCodeSelect, ComponentClassName.DialCodeSelect, className), labelHidden: true, ref: ref, ...props }, dialCodeOptions));\n};\nconst DialCodeSelect = primitiveWithForwardRef(DialCodeSelectPrimitive);\nDialCodeSelect.displayName = 'DialCodeSelect';\n\nexport { DialCodeSelect };\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,UAAU,EAAEC,kBAAkB,EAAEC,gBAAgB,QAAQ,iBAAiB;AAClF,SAASC,WAAW,QAAQ,gCAAgC;AAC5D,SAASC,uBAAuB,QAAQ,sCAAsC;AAE9E,MAAMC,uBAAuB,GAAGA,CAAAC,IAAA,EAAoDC,GAAG,KAAK;EAAA,IAA3D;IAAEC,SAAS;IAAEC,YAAY;IAAEC,UAAU;IAAE,GAAGC;EAAM,CAAC,GAAAL,IAAA;EAC9E,MAAMM,QAAQ,GAAGH,YAAY,aAAZA,YAAY,cAAZA,YAAY,GAAIP,gBAAgB;EACjD,MAAMW,eAAe,GAAGd,KAAK,CAACe,OAAO,CAAC,MAAMF,QAAQ,CAACG,GAAG,CAAEC,QAAQ;EAClE;EACAjB,KAAK,CAACkB,aAAa,CAAC,QAAQ,EAAE;IAAEC,GAAG,EAAEF,QAAQ;IAAEG,KAAK,EAAEH,QAAQ;IAAEI,QAAQ,EAAEV;EAAW,CAAC,EAAEM,QAAQ,CAAE,CAAC,EAAE,CAACJ,QAAQ,EAAEF,UAAU,CAAC,CAAC;EAC5H,OAAQX,KAAK,CAACkB,aAAa,CAACd;EAC5B;AACJ;AACA;AACA,MAHI,EAIE;IAAE,eAAe,EAAEO,UAAU;IAAEW,YAAY,EAAE,kBAAkB;IAAEb,SAAS,EAAER,UAAU,CAACC,kBAAkB,CAACqB,iBAAiB,EAAErB,kBAAkB,CAACsB,cAAc,EAAEf,SAAS,CAAC;IAAEgB,WAAW,EAAE,IAAI;IAAEjB,GAAG,EAAEA,GAAG;IAAE,GAAGI;EAAM,CAAC,EAAEE,eAAe,CAAC;AAC3O,CAAC;AACD,MAAMU,cAAc,GAAGnB,uBAAuB,CAACC,uBAAuB,CAAC;AACvEkB,cAAc,CAACE,WAAW,GAAG,gBAAgB;AAE7C,SAASF,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}