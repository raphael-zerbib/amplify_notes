{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst attributeIsSecondaryIndex = attr => {\n  var _attr$properties, _attr$properties2, _attr$properties3;\n  return attr.type === 'key' && ( // presence of `name` property distinguishes GSI from primary index\n  (_attr$properties = attr.properties) === null || _attr$properties === void 0 ? void 0 : _attr$properties.name) && ((_attr$properties2 = attr.properties) === null || _attr$properties2 === void 0 ? void 0 : _attr$properties2.queryField) && ((_attr$properties3 = attr.properties) === null || _attr$properties3 === void 0 ? void 0 : _attr$properties3.fields.length) > 0;\n};\nconst getSecondaryIndexesFromSchemaModel = model => {\n  var _model$attributes;\n  const idxs = (_model$attributes = model.attributes) === null || _model$attributes === void 0 ? void 0 : _model$attributes.filter(attributeIsSecondaryIndex).map(attr => {\n    const queryField = attr.properties.queryField;\n    const [pk, ...sk] = attr.properties.fields;\n    return {\n      queryField,\n      pk,\n      sk\n    };\n  });\n  return idxs || [];\n};\nexport { getSecondaryIndexesFromSchemaModel };","map":{"version":3,"names":["attributeIsSecondaryIndex","attr","_attr$properties","_attr$properties2","_attr$properties3","type","properties","name","queryField","fields","length","getSecondaryIndexesFromSchemaModel","model","_model$attributes","idxs","attributes","filter","map","pk","sk"],"sources":["/Users/raphaperso/Documents/Hub/amplify_test/notes/node_modules/@aws-amplify/api-graphql/src/internals/clientUtils.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst attributeIsSecondaryIndex = (attr) => {\n    return (attr.type === 'key' &&\n        // presence of `name` property distinguishes GSI from primary index\n        attr.properties?.name &&\n        attr.properties?.queryField &&\n        attr.properties?.fields.length > 0);\n};\nexport const getSecondaryIndexesFromSchemaModel = (model) => {\n    const idxs = model.attributes\n        ?.filter(attributeIsSecondaryIndex)\n        .map((attr) => {\n        const queryField = attr.properties.queryField;\n        const [pk, ...sk] = attr.properties.fields;\n        return {\n            queryField,\n            pk,\n            sk,\n        };\n    });\n    return idxs || [];\n};\n"],"mappings":"AAAA;AACA;AACA,MAAMA,yBAAyB,GAAIC,IAAI,IAAK;EAAA,IAAAC,gBAAA,EAAAC,iBAAA,EAAAC,iBAAA;EACxC,OAAQH,IAAI,CAACI,IAAI,KAAK,KAAK,MAC/B;EAAA,CAAAH,gBAAA,GACQD,IAAI,CAACK,UAAU,cAAAJ,gBAAA,uBAAfA,gBAAA,CAAiBK,IAAI,OAAAJ,iBAAA,GACrBF,IAAI,CAACK,UAAU,cAAAH,iBAAA,uBAAfA,iBAAA,CAAiBK,UAAU,KAC3B,EAAAJ,iBAAA,GAAAH,IAAI,CAACK,UAAU,cAAAF,iBAAA,uBAAfA,iBAAA,CAAiBK,MAAM,CAACC,MAAM,IAAG,CAAC;AAC1C,CAAC;AACW,MAACC,kCAAkC,GAAIC,KAAK,IAAK;EAAA,IAAAC,iBAAA;EACzD,MAAMC,IAAI,IAAAD,iBAAA,GAAGD,KAAK,CAACG,UAAU,cAAAF,iBAAA,uBAAhBA,iBAAA,CACPG,MAAM,CAAChB,yBAAyB,CAAC,CAClCiB,GAAG,CAAEhB,IAAI,IAAK;IACf,MAAMO,UAAU,GAAGP,IAAI,CAACK,UAAU,CAACE,UAAU;IAC7C,MAAM,CAACU,EAAE,EAAE,GAAGC,EAAE,CAAC,GAAGlB,IAAI,CAACK,UAAU,CAACG,MAAM;IAC1C,OAAO;MACHD,UAAU;MACVU,EAAE;MACFC;IACZ,CAAS;EACT,CAAK,CAAC;EACF,OAAOL,IAAI,IAAI,EAAE;AACrB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}